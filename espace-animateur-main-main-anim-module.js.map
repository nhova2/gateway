{"version":3,"sources":["webpack:///./src/app/espace/animateur/main/main-anim.module.ts","webpack:///./src/app/espace/animateur/main/main-anim/main-anim.component.html","webpack:///./src/app/espace/animateur/main/main-anim/main-anim.component.scss","webpack:///./src/app/espace/animateur/main/main-anim/main-anim.component.ts"],"names":[],"mappings":"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","file":"espace-animateur-main-main-anim-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MainAnimComponent } from './main-anim/main-anim.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { SharedModule } from '../../../shared-front/shared/shared.module';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule, MatDividerModule, MatFormFieldModule, MatIconModule, MatMenuModule, MatSelectModule, MatTabsModule, MatTableModule, MatListModule, MatToolbarModule, MatDialogModule, MatPaginatorModule, MatGridListModule, MatCardModule, MatCheckboxModule } from '@angular/material';\r\nimport { FuseSidebarModule, FuseWidgetModule } from '@fuse/components';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { AnimHomeService } from '../anim-home.service';\r\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nexport const routes = [\r\n  { \r\n    path: '', \r\n    component: MainAnimComponent, \r\n    pathMatch: 'full' ,\r\n    resolve  : \r\n    {\r\n      data: AnimHomeService\r\n    }\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [\r\n      CommonModule,\r\n      RouterModule.forChild(routes),\r\n      FuseSharedModule,\r\n      SharedModule,\r\n      MatBadgeModule,\r\n      MatInputModule,\r\n      MatButtonModule,\r\n      MatDividerModule,\r\n      MatFormFieldModule,\r\n      MatIconModule,\r\n      MatMenuModule,\r\n      MatSelectModule,\r\n      MatTableModule,\r\n      MatTabsModule,\r\n      MatInputModule,\r\n      FuseSharedModule,\r\n      FuseSidebarModule,\r\n      MatListModule,\r\n      MatToolbarModule,\r\n      MatDialogModule,\r\n      MatPaginatorModule,\r\n      ChartsModule,\r\n      NgxChartsModule,\r\n      FuseSharedModule,\r\n      FuseWidgetModule\r\n      ,MatGridListModule\r\n      ,MatCheckboxModule\r\n      ,MatCardModule\r\n      //,BrowserAnimationsModule\r\n  ],\r\n  providers   : [AnimHomeService\r\n  ],\r\n  declarations: [MainAnimComponent]\r\n})\r\nexport class MainAnimModule { }\r\n","module.exports = \"<div fxFlex=\\\"60\\\"> \\r\\n\\t<div class=\\\"anim-box info-box general\\\" fxLayout=\\\"column\\\">\\r\\n\\t\\t<!--div class=\\\"content\\\"-->\\r\\n\\t\\t<mat-form-field>\\r\\n\\t\\t  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filtre\\\">\\r\\n\\t\\t</mat-form-field>\\r\\n\\t\\t  <div class=\\\"mat-elevation-z8\\\">\\r\\n\\t\\t  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\t\\t   <!-- ID Column -->\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"id\\\">\\r\\n\\t\\t\\t  <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n\\t\\t\\t  <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t<!-- Progress Column -->\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"progress\\\">\\r\\n\\t\\t\\t  <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\\r\\n\\t\\t\\t  <!--td mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </td-->\\r\\n\\t\\t\\t  <td mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}</td>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t<!-- Name Column -->\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"name\\\">\\r\\n\\t\\t\\t  <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom </th>\\r\\n\\t\\t\\t  <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t<!-- Color Column -->\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"color\\\">\\r\\n\\t\\t\\t  <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n\\t\\t\\t  <!--td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.color}} </td-->\\r\\n\\t\\t\\t  <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> <mat-icon>how_to_reg</mat-icon></td>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n\\t\\t\\t<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t  </table>\\r\\n\\t\\t  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n<div fxFlex=\\\"40\\\">\\r\\n\\t<div class=\\\"mat-elevation-z8\\\">\\r\\n\\t\\t<div class=\\\"profile-box friends\\\" fxLayout=\\\"column\\\">\\r\\n\\t   <div class=\\\"content\\\">\\r\\n\\t   <div class=\\\"light-blue-600\\\">\\r\\n\\t\\t\\t\\t\\t   <div class=\\\"p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\t\\t\\t\\t\\t\\t   <div class=\\\"pr-16\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   <div class=\\\"h3 font-weight-300\\\">Ventes</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t   <div class=\\\"h5 secondary-text\\\">Suivi des Ventes</div>\\r\\n\\t\\t\\t\\t\\t\\t   </div>\\r\\n\\t\\t\\t\\t\\t\\t   <div>\\r\\n\\t\\t\\t\\t\\t\\t\\t   <button mat-icon-button [matMenuTriggerFor]=\\\"card19Menu\\\" aria-label=\\\"more\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   <mat-icon>more_vert</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t   </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t   <mat-menu #card19Menu=\\\"matMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   <button mat-menu-item>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   <mat-icon>trending_up</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   <span>Courbe</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   <button mat-menu-item>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   <mat-icon>history</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   <span>Historique</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   <button mat-menu-item>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   <mat-icon>notifications_off</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   <span>Desactiver Alertes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t   </mat-menu>\\r\\n\\t\\t\\t\\t\\t\\t   </div>\\r\\n\\t\\t\\t\\t\\t   </div>\\r\\n\\t\\t\\t\\t\\t   <div class=\\\"p-16 pt-8\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between end\\\">\\r\\n\\t\\t\\t\\t\\t\\t   <div class=\\\"font-size-48 font-weight-300 line-height-1\\\">{{widgets.widget8.today}}</div>\\r\\n\\t\\t\\t\\t\\t\\t   <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   <mat-icon *ngIf=\\\"widgets.widget8.change.value > 0\\\">trending_up</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t   <mat-icon *ngIf=\\\"widgets.widget8.change.value < 0\\\">trending_down</mat-icon>\\r\\n\\t\\t\\t\\t\\t\\t\\t   <div class=\\\"m1-8\\\">{{widgets.widget8.change.value}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   ({{widgets.widget8.change.percentage}}%)\\r\\n\\t\\t\\t\\t\\t\\t\\t   </div>\\r\\n\\t\\t\\t\\t\\t\\t   </div>\\r\\n\\t\\t\\t\\t\\t   </div>\\r\\n\\t\\t\\t\\t   </div>\\r\\n\\t\\t\\t\\t   <mat-tab-group backgroundColor=\\\"accent\\\">\\r\\n\\t\\t\\t\\t\\t   <mat-tab label=\\\"1JOUR\\\">\\r\\n\\t\\t\\t\\t\\t\\t   <div class=\\\"h-200 my-16\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   <ngx-charts-line-chart\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   *fuseIfOnDom\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [scheme]=\\\"widgets.widget8.scheme\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [results]=\\\"widgets.widget8.data\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [xAxis]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [yScaleMin]=\\\"widgets.widget8.dataMin\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [yScaleMax]=\\\"widgets.widget8.dataMax\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   </ngx-charts-line-chart>\\r\\n\\t\\t\\t\\t\\t\\t   </div>\\r\\n\\t\\t\\t\\t\\t   </mat-tab>\\r\\n\\t\\t\\t\\t\\t   <mat-tab label=\\\"1SEM\\\">\\r\\n\\t\\t\\t\\t\\t\\t   <div class=\\\"h-200 my-16\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   <ngx-charts-line-chart\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   *fuseIfOnDom\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [scheme]=\\\"widgets.widget8.scheme\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [results]=\\\"widgets.widget8.data\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [xAxis]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [yScaleMin]=\\\"widgets.widget8.dataMin\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [yScaleMax]=\\\"widgets.widget8.dataMax\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   </ngx-charts-line-chart>\\r\\n\\t\\t\\t\\t\\t\\t   </div>\\r\\n\\t\\t\\t\\t\\t   </mat-tab>\\r\\n\\t\\t\\t\\t\\t   <mat-tab label=\\\"1MOIS\\\">\\r\\n\\t\\t\\t\\t\\t\\t   <div class=\\\"h-200 my-16\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   <ngx-charts-line-chart\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   *fuseIfOnDom\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [scheme]=\\\"widgets.widget8.scheme\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [results]=\\\"widgets.widget8.data\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [xAxis]=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [yAxis]=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [yScaleMin]=\\\"widgets.widget8.dataMin\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [yScaleMax]=\\\"widgets.widget8.dataMax\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   </ngx-charts-line-chart>\\r\\n\\t\\t\\t\\t\\t\\t   </div>\\r\\n\\t\\t\\t\\t\\t   </mat-tab>\\r\\n\\t\\t\\t\\t   </mat-tab-group>\\r\\n\\t\\t\\t\\t   </div></div>\\r\\n\\t   <div class=\\\"anim-box groups\\\" fxLayout=\\\"column\\\">\\r\\n\\t\\t   <div class=\\\"content\\\">\\r\\n\\t\\t\\t   <div class=\\\"p-16\\\">\\r\\n\\t\\t\\t\\t   <div class=\\\"h1 font-weight-300\\\">Ventes par domaine</div>\\r\\n\\t\\t\\t   </div>\\r\\n\\r\\n\\t\\t\\t   <div class=\\\"h-200\\\">\\r\\n\\t\\t\\t\\t   <ngx-charts-pie-chart\\r\\n\\t\\t\\t\\t\\t   *fuseIfOnDom\\r\\n\\t\\t\\t\\t\\t   [scheme]=\\\"widgets.widget7.scheme\\\"\\r\\n\\t\\t\\t\\t\\t   [results]=\\\"widgets.widget7.devices\\\"\\r\\n\\t\\t\\t\\t\\t   [doughnut]=\\\"true\\\">\\r\\n\\t\\t\\t\\t   </ngx-charts-pie-chart>\\r\\n\\t\\t\\t   </div>\\r\\n\\r\\n\\t\\t\\t   <div class=\\\"p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n\\t\\t\\t\\t   <div class=\\\"px-16\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" *ngFor=\\\"let device of devices\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t   <div class=\\\"h4 secondary-text\\\">{{device.name}}</div>\\r\\n\\t\\t\\t\\t\\t   <div class=\\\"h2 font-weight-300 py-8\\\">{{device.value}}%</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t   <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n\\t\\t\\t\\t\\t\\t   <mat-icon class=\\\"s-18 pr-4 red-fg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t *ngIf=\\\"device.change < 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   arrow_downward\\r\\n\\t\\t\\t\\t\\t\\t   </mat-icon>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t   <mat-icon class=\\\"s-18 pr-4 green-fg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t *ngIf=\\\"device.change > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   arrow_upward\\r\\n\\t\\t\\t\\t\\t\\t   </mat-icon>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t   <div class=\\\"h5 red-fg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'red-fg': device.change < 0, 'green-fg': device.change > 0}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t   {{device.change}}%\\r\\n\\t\\t\\t\\t\\t\\t   </div>\\r\\n\\t\\t\\t\\t\\t   </div>\\r\\n\\r\\n\\t\\t\\t\\t   </div>\\r\\n\\r\\n\\t\\t\\t   </div>\\r\\n\\r\\n\\t\\t\\t   <div class=\\\"card-divider mb-0\\\"></div>\\r\\n\\r\\n\\t\\t\\t   <div class=\\\"px-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\t\\t\\t\\t   <mat-form-field>\\r\\n\\t\\t\\t\\t\\t   <mat-select class=\\\"simplified\\\" value=\\\"7days\\\">\\r\\n\\t\\t\\t\\t\\t\\t   <mat-option value=\\\"today\\\">Aujourd'hui</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t   <mat-option value=\\\"yesterday\\\">Hier</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t   <mat-option value=\\\"7days\\\">7 derniers jours</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t   <mat-option value=\\\"28days\\\">30 derniers jours</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t   <mat-option value=\\\"90days\\\">90 derniers jours</mat-option>\\r\\n\\t\\t\\t\\t\\t   </mat-select>\\r\\n\\t\\t\\t\\t   </mat-form-field>\\r\\n\\r\\n\\t\\t\\t\\t   <button mat-button color=\\\"accent\\\">Vue Globale</button>\\r\\n\\t\\t\\t   </div>\\r\\n\\r\\n\\t\\t   <!--/div-->\\r\\n\\t\\t   </div>\\r\\n\\t   </div>\\r\\n   </div>\\r\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\ntable {\\n  width: 100%; }\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\ntd,\\nth {\\n  width: 25%; }\\n.orange600 {\\n  color: #FB8C00;\\n  padding-top: 7px; }\\n.green600 {\\n  color: #3ea80c;\\n  padding-top: 7px; }\\n.red600 {\\n  color: #fb0000;\\n  padding-top: 7px; }\\n.title {\\n  font-weight: bold; }\\n.title-top {\\n  background-color: #134ae4ba; }\\n\"","import { Component, OnDestroy, OnInit,ViewChild,ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatTableDataSource, MatPaginator, MatSort, PageEvent } from '@angular/material';\r\nimport { AnimHomeService } from '../../anim-home.service';\r\nimport { ProjectDashboardService } from 'app/main/apps/dashboards/project/project.service';\r\nimport { CrudPopupComponent } from 'app/shared-front/shared/crudPopups/crudPopup/crudPopup.component';\r\n\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  color: string;\r\n}\r\n\r\nconst COLORS: string[] = ['red', 'orange', 'green'];\r\nconst NAMES: string[] = ['Binta', 'Aziz', 'Kine', 'Mohamed', 'Khady', 'Thierno',\r\n  'Fatou', 'Amadou', 'Malick', 'Babacar', 'Massamba', 'Pape',\r\n  'Coura', 'Alassane', 'Massamba', 'Alioune', 'Sady', 'Kader', 'Momar'];\r\n  \r\nconst ACTEURTYPES: string[] = ['Client', 'Fournisseur', 'Animateur'];\r\n@Component({\r\n  selector: 'app-main-anim',\r\n  templateUrl: './main-anim.component.html',\r\n  styleUrls: ['./main-anim.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\n\r\nexport class MainAnimComponent implements OnInit, OnDestroy \r\n{\r\n\r\n   home: any;\r\n\twidgets: any;\r\n\tcrudComp: CrudPopupComponent;\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\t\r\n\tdisplayedColumns: string[] = ['id', 'name', 'progress', 'color'];\r\n\tdataSource: MatTableDataSource<UserData>;\r\n\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\t\r\n\tlength = 100;\r\n\tpageSize = 10;\r\n\t\r\n\tdevices = [\r\n        {\r\n          name: 'Peche',\r\n          value:'75',\r\n          change:'-0.9'\r\n        },\r\n        {\r\n          name: 'Elevage',\r\n          value:'10',\r\n          change:'0.9'\r\n        },\r\n        {\r\n          name: 'Agriculture',\r\n          value:'15',\r\n          change:'2.1'\r\n        }\r\n    ]\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {AnimHomeService} _animService\r\n     */\r\n    constructor(\r\n        private _animService: AnimHomeService, private _proj: ProjectDashboardService,private parCrud: CrudPopupComponent)\r\n    {\r\n        console.log(\"AnimHomeComponent contructor\");\r\n        this.widgets=_proj.getWidgets();\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n\t\t\r\n\t\tthis._registerCustomChartJSPlugin();\r\n\t\t\r\n\t\t// Create 100 users\r\n\t\tconst users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\t\t\r\n\t\t// Assign the data to the data source for the table to render\r\n\t\tthis.dataSource = new MatTableDataSource(users);\r\n\t\t\r\n\t\tthis.crudComp=this.parCrud;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        console.log (\"MainAnimComponent ngOnInit\")\r\n        // Get the widgets from the service\r\n       // this.widgets = this._animService.widgets;\r\n       this.widgets = this._animService.widgets;\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t\t\r\n\t\t\r\n\t\tthis._animService.homeMainOnChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(home => {\r\n                this.home = home;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\t\r\n\tapplyFilter(filterValue: string) {\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t  this.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t  }\r\n\t  \r\n\t/**\r\n     * Register a custom plugin\r\n     */\r\n    private _registerCustomChartJSPlugin(): void\r\n    {\r\n        (<any>window).Chart.plugins.register({\r\n            afterDatasetsDraw: function (chart, easing): any {\r\n                // Only activate the plugin if it's made available\r\n                // in the options\r\n                if (\r\n                    !chart.options.plugins.xLabelsOnTop ||\r\n                    (chart.options.plugins.xLabelsOnTop && chart.options.plugins.xLabelsOnTop.active === false)\r\n                )\r\n                {\r\n                    return;\r\n                }\r\n\r\n                // To only draw at the end of animation, check for easing === 1\r\n                const ctx = chart.ctx;\r\n\r\n                chart.data.datasets.forEach(function (dataset, i): any {\r\n                    const meta = chart.getDatasetMeta(i);\r\n                    if ( !meta.hidden )\r\n                    {\r\n                        meta.data.forEach(function (element, index): any {\r\n\r\n                            // Draw the text in black, with the specified font\r\n                            ctx.fillStyle = 'rgba(255, 255, 255, 0.7)';\r\n                            const fontSize = 13;\r\n                            const fontStyle = 'normal';\r\n                            const fontFamily = 'Roboto, Helvetica Neue, Arial';\r\n                            ctx.font = (<any>window).Chart.helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                            // Just naively convert to string for now\r\n                            const dataString = dataset.data[index].toString() + 'k';\r\n\r\n                            // Make sure alignment settings are correct\r\n                            ctx.textAlign = 'center';\r\n                            ctx.textBaseline = 'middle';\r\n                            const padding = 15;\r\n                            const startY = 24;\r\n                            const position = element.tooltipPosition();\r\n                            ctx.fillText(dataString, position.x, startY);\r\n\r\n                            ctx.save();\r\n\r\n                            ctx.beginPath();\r\n                            ctx.setLineDash([5, 3]);\r\n                            ctx.moveTo(position.x, startY + padding);\r\n                            ctx.lineTo(position.x, position.y - padding);\r\n                            ctx.strokeStyle = 'rgba(255,255,255,0.12)';\r\n                            ctx.stroke();\r\n\r\n                            ctx.restore();\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\r\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    //progress: name+\"_\"+Math.round(Math.random() * 100).toString()+\"@mail.com\"\r\n    progress: ACTEURTYPES[Math.round(Math.random() * (ACTEURTYPES.length - 1))]\r\n\t//progress: \"77 400 500\"\r\n\t,color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\r\n  };\r\n}\r\n"],"sourceRoot":""}