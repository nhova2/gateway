{"version":3,"sources":["webpack:///./src/app/main/apps/todo/sidebars/main/main-sidebar.component.html","webpack:///./src/app/main/apps/todo/sidebars/main/main-sidebar.component.scss","webpack:///./src/app/main/apps/todo/sidebars/main/main-sidebar.component.ts","webpack:///./src/app/main/apps/todo/todo-details/todo-details.component.html","webpack:///./src/app/main/apps/todo/todo-details/todo-details.component.scss","webpack:///./src/app/main/apps/todo/todo-details/todo-details.component.ts","webpack:///./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.html","webpack:///./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.scss","webpack:///./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.ts","webpack:///./src/app/main/apps/todo/todo-list/todo-list.component.html","webpack:///./src/app/main/apps/todo/todo-list/todo-list.component.scss","webpack:///./src/app/main/apps/todo/todo-list/todo-list.component.ts","webpack:///./src/app/main/apps/todo/todo.component.html","webpack:///./src/app/main/apps/todo/todo.component.scss","webpack:///./src/app/main/apps/todo/todo.component.ts","webpack:///./src/app/main/apps/todo/todo.model.ts","webpack:///./src/app/main/apps/todo/todo.module.ts","webpack:///./src/app/main/apps/todo/todo.service.ts"],"names":[],"mappings":"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","file":"todo-todo-module.js","sourcesContent":["module.exports = \"<!-- SIDEBAR HEADER -->\\n<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between start\\\"\\n     class=\\\"header accent p-24 pb-4\\\">\\n    <div class=\\\"logo\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n        <mat-icon class=\\\"logo-icon s-32\\\" [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">\\n            check_box\\n        </mat-icon>\\n        <span class=\\\"logo-text\\\" [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">To-Do</span>\\n    </div>\\n\\n    <div class=\\\"account\\\" fxLayout=\\\"column\\\" [@animate]=\\\"{value:'*',params:{delay:'300ms'}}\\\">\\n        <div class=\\\"title\\\">John Doe</div>\\n        <mat-form-field floatLabel=\\\"never\\\">\\n            <mat-select class=\\\"account-selection\\\" placeholder=\\\"Todo Selection\\\"\\n                        [ngModel]=\\\"selectedAccount\\\">\\n                <mat-option *ngFor=\\\"let account of (accounts | keys)\\\" [value]=\\\"account.key\\\">\\n                    {{account.value}}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n    </div>\\n\\n</div>\\n<!-- / SIDEBAR HEADER -->\\n\\n<!-- SIDEBAR CONTENT -->\\n<div class=\\\"content\\\" fusePerfectScrollbar [@animate]=\\\"{value:'*',params:{y:'50px'}}\\\">\\n\\n    <div class=\\\"p-24\\\">\\n        <button mat-raised-button\\n                class=\\\"mat-accent add-todo-button w-100-p\\\"\\n                (click)=\\\"newTodo()\\\"\\n                aria-label=\\\"ADD TASK\\\">\\n            ADD TASK\\n        </button>\\n    </div>\\n\\n    <div class=\\\"nav\\\">\\n\\n        <div class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" matRipple [routerLink]=\\\"'/apps/todo/all'\\\"\\n               [routerLinkActive]=\\\"['active', 'accent']\\\">\\n                <mat-icon class=\\\"nav-link-icon\\\">view_headline</mat-icon>\\n                <span>All</span>\\n            </a>\\n        </div>\\n\\n        <div class=\\\"nav-subheader\\\">FILTERS</div>\\n\\n        <div class=\\\"nav-item\\\" *ngFor=\\\"let filter of filters\\\">\\n            <a class=\\\"nav-link\\\" matRipple [routerLink]=\\\"'/apps/todo/filter/' + filter.handle\\\"\\n               [routerLinkActive]=\\\"['active', 'accent']\\\">\\n                <mat-icon class=\\\"nav-link-icon\\\" *ngIf=\\\"filter.icon\\\">{{filter.icon}}</mat-icon>\\n                <span>{{filter.title}}</span>\\n            </a>\\n        </div>\\n\\n        <div class=\\\"nav-subheader\\\">TAGS</div>\\n\\n        <div class=\\\"nav-item\\\" *ngFor=\\\"let tag of tags\\\">\\n            <a class=\\\"nav-link\\\" matRipple [routerLink]=\\\"'/apps/todo/tag/' + tag.handle\\\"\\n               [routerLinkActive]=\\\"['active', 'accent']\\\">\\n                <mat-icon class=\\\"nav-link-icon\\\" [ngStyle]=\\\"{'color':tag.color}\\\">label</mat-icon>\\n                <span>{{tag.title}}</span>\\n            </a>\\n        </div>\\n\\n    </div>\\n\\n</div>\\n<!-- / SIDEBAR CONTENT -->\\n\"","module.exports = \"todo-main-sidebar {\\n  display: flex;\\n  flex: 1 0 auto;\\n  flex-direction: column;\\n  height: 100%; }\\n  todo-main-sidebar .header .logo .logo-icon {\\n    margin: 0 16px 0 0; }\\n  todo-main-sidebar .header .logo .logo-text {\\n    font-size: 24px;\\n    line-height: 24px; }\\n  todo-main-sidebar .header .account {\\n    width: 100%; }\\n\"","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n@Component({\n    selector     : 'todo-main-sidebar',\n    templateUrl  : './main-sidebar.component.html',\n    styleUrls    : ['./main-sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoMainSidebarComponent implements OnInit, OnDestroy\n{\n    folders: any[];\n    filters: any[];\n    tags: any[];\n    accounts: object;\n    selectedAccount: string;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {TodoService} _todoService\n     * @param {Router} _router\n     */\n    constructor(\n        private _todoService: TodoService,\n        private _router: Router\n    )\n    {\n        // Set the defaults\n        this.accounts = {\n            'creapond'    : 'johndoe@creapond.com',\n            'withinpixels': 'johndoe@withinpixels.com'\n        };\n        this.selectedAccount = 'creapond';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._todoService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(filters => {\n                this.filters = filters;\n            });\n\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(tags => {\n                this.tags = tags;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * New todo\n     */\n    newTodo(): void\n    {\n        this._router.navigate(['/apps/todo/all']).then(() => {\n            setTimeout(() => {\n                this._todoService.onNewTodoClicked.next('');\n            });\n        });\n    }\n}\n","module.exports = \"<div *ngIf=\\\"!todo\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlex>\\n    <mat-icon class=\\\"s-120 mb-12 select-todo-icon hint-text\\\"\\n              [@animate]=\\\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\\\">check_box\\n    </mat-icon>\\n    <span class=\\\"hint-text mat-h1 select-todo-text\\\" [@animate]=\\\"{value:'*',params:{delay:'400ms'}}\\\">\\n        Select a todo\\n    </span>\\n</div>\\n\\n<div *ngIf=\\\"todo\\\">\\n\\n    <div class=\\\"todo-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n        <button mat-button class=\\\"toggle-complete-button\\\" (click)=\\\"toggleCompleted($event)\\\"\\n                aria-label=\\\"Toggle completed\\\" fxFlex=\\\"0 1 auto\\\">\\n            <mat-icon *ngIf=\\\"todo.completed\\\">check_box</mat-icon>\\n            <mat-icon *ngIf=\\\"!todo.completed\\\">check_box_outline_blank</mat-icon>\\n            <span class=\\\"ml-8\\\">Mark as Done</span>\\n        </button>\\n\\n        <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n            <button mat-icon-button (click)=\\\"toggleImportant($event)\\\" aria-label=\\\"Toggle important\\\">\\n                <mat-icon class=\\\"red-fg\\\" *ngIf=\\\"todo.important\\\">error</mat-icon>\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"!todo.important\\\">error_outline</mat-icon>\\n            </button>\\n\\n            <button mat-icon-button (click)=\\\"toggleStar($event)\\\" aria-label=\\\"Toggle star\\\">\\n                <mat-icon class=\\\"amber-fg\\\" *ngIf=\\\"todo.starred\\\">star</mat-icon>\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"!todo.starred\\\">star_outline</mat-icon>\\n            </button>\\n\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"labelMenu\\\" fxFlex=\\\"0 1 auto\\\">\\n                <mat-icon class=\\\"secondary-text\\\">label</mat-icon>\\n            </button>\\n\\n            <mat-menu #labelMenu=\\\"matMenu\\\">\\n                <button mat-menu-item *ngFor=\\\"let tag of tags\\\"\\n                        (click)=\\\"toggleTagOnTodo(tag.id)\\\">\\n                    <mat-icon *ngIf=\\\"hasTag(tag.id)\\\">check</mat-icon>\\n                    <mat-icon *ngIf=\\\"!hasTag(tag.id)\\\"></mat-icon>\\n                    <span>{{tag.title}}</span>\\n                </button>\\n            </mat-menu>\\n\\n            <button mat-icon-button (click)=\\\"toggleDeleted($event)\\\" aria-label=\\\"Toggle delete\\\">\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"todo.deleted\\\">delete_forever</mat-icon>\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"!todo.deleted\\\">delete</mat-icon>\\n            </button>\\n\\n        </div>\\n    </div>\\n\\n    <div class=\\\"todo-content\\\">\\n\\n        <form [formGroup]=\\\"todoForm\\\" (submit)=\\\"addTodo()\\\">\\n\\n            <mat-form-field class=\\\"title mt-8\\\" floatLabel=\\\"never\\\" fxFill>\\n                <textarea matInput\\n                          #titleInput\\n                          name=\\\"title\\\"\\n                          formControlName=\\\"title\\\"\\n                          placeholder=\\\"Title\\\"\\n                          required>\\n                </textarea>\\n            </mat-form-field>\\n\\n            <div class=\\\"tags mb-24\\\" fxFlexFill fxLayout=\\\"row wrap\\\">\\n                <div class=\\\"tag\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" *ngFor=\\\"let tagId of todo.tags\\\">\\n\\n                    <div class=\\\"tag-color\\\" [ngStyle]=\\\"{'background-color': tags | getById:tagId:'color'}\\\"></div>\\n\\n                    <div class=\\\"tag-label\\\">{{tags | getById:tagId:'title'}}</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"dates\\\" fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\n\\n                <mat-form-field class=\\\"mr-sm-24\\\" fxFlex>\\n                    <input matInput [matDatepicker]=\\\"startDatePicker\\\" placeholder=\\\"Start Date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #startDatePicker></mat-datepicker>\\n                </mat-form-field>\\n\\n                <mat-form-field fxFlex>\\n                    <input matInput [matDatepicker]=\\\"dueDatePicker\\\" placeholder=\\\"Due Date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"dueDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #dueDatePicker></mat-datepicker>\\n                </mat-form-field>\\n\\n            </div>\\n\\n            <mat-form-field class=\\\"\\\" fxFill>\\n                <textarea matInput #notes\\n                          name=\\\"notes\\\"\\n                          formControlName=\\\"notes\\\"\\n                          placeholder=\\\"Notes\\\"\\n                          maxlength=\\\"500\\\">\\n                </textarea>\\n                <mat-hint align=\\\"end\\\">{{notes.value.length}} / 500</mat-hint>\\n            </mat-form-field>\\n\\n            <button *ngIf=\\\"formType === 'new'\\\"\\n                    mat-raised-button class=\\\"mat-accent\\\"\\n                    [disabled]=\\\"todoForm.invalid\\\">SAVE\\n            </button>\\n        </form>\\n\\n    </div>\\n</div>\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\ntodo-details {\\n  display: flex;\\n  flex: 1 0 auto;\\n  flex-direction: column;\\n  overflow-y: auto;\\n  -webkit-overflow-scrolling: touch; }\\ntodo-details .todo-header {\\n    padding: 24px;\\n    border-bottom: 1px solid; }\\ntodo-details .todo-header .actions {\\n      min-width: 88px; }\\ntodo-details .todo-content {\\n    padding: 24px; }\\ntodo-details .todo-content .title {\\n      font-size: 17px;\\n      font-weight: 500; }\\ntodo-details .todo-content .tag {\\n      font-size: 11px;\\n      border-radius: 2px;\\n      margin: 8px 4px 0 0;\\n      padding: 3px 8px; }\\ntodo-details .todo-content .tag .tag-color {\\n        width: 8px;\\n        height: 8px;\\n        margin-right: 8px;\\n        border-radius: 50%; }\\ntodo-details .todo-content .dates .mat-form-field {\\n      width: auto !important; }\\n\"","import { Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { FuseUtils } from '@fuse/utils';\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n@Component({\n    selector     : 'todo-details',\n    templateUrl  : './todo-details.component.html',\n    styleUrls    : ['./todo-details.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoDetailsComponent implements OnInit, OnDestroy\n{\n    todo: Todo;\n    tags: any[];\n    formType: string;\n    todoForm: FormGroup;\n\n    @ViewChild('titleInput')\n    titleInputField;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {TodoService} _todoService\n     * @param {FormBuilder} _formBuilder\n     */\n    constructor(\n        private _todoService: TodoService,\n        private _formBuilder: FormBuilder\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update the current todo\n        this._todoService.onCurrentTodoChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(([todo, formType]) => {\n\n                if ( todo && formType === 'edit' )\n                {\n                    this.formType = 'edit';\n                    this.todo = todo;\n                    this.todoForm = this.createTodoForm();\n\n                    this.todoForm.valueChanges\n                        .pipe(\n                            takeUntil(this._unsubscribeAll),\n                            debounceTime(500),\n                            distinctUntilChanged()\n                        )\n                        .subscribe(data => {\n                            this._todoService.updateTodo(data);\n                        });\n                }\n            });\n\n        // Subscribe to update on tag change\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.tags = labels;\n            });\n\n        // Subscribe to update on tag change\n        this._todoService.onNewTodoClicked\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(() => {\n                this.todo = new Todo({});\n                this.todo.id = FuseUtils.generateGUID();\n                this.formType = 'new';\n                this.todoForm = this.createTodoForm();\n                this.focusTitleField();\n                this._todoService.onCurrentTodoChanged.next([this.todo, 'new']);\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Focus title field\n     */\n    focusTitleField(): void\n    {\n        setTimeout(() => {\n            this.titleInputField.nativeElement.focus();\n        });\n    }\n\n    /**\n     * Create todo form\n     *\n     * @returns {FormGroup}\n     */\n    createTodoForm(): FormGroup\n    {\n        return this._formBuilder.group({\n            'id'       : [this.todo.id],\n            'title'    : [this.todo.title],\n            'notes'    : [this.todo.notes],\n            'startDate': [this.todo.startDate],\n            'dueDate'  : [this.todo.dueDate],\n            'completed': [this.todo.completed],\n            'starred'  : [this.todo.starred],\n            'important': [this.todo.important],\n            'deleted'  : [this.todo.deleted],\n            'tags'     : [this.todo.tags]\n        });\n    }\n\n    /**\n     * Toggle star\n     *\n     * @param event\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleStar();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle important\n     *\n     * @param event\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleImportant();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Completed\n     *\n     * @param event\n     */\n    toggleCompleted(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleCompleted();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Deleted\n     *\n     * @param event\n     */\n    toggleDeleted(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleDeleted();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle tag on todo\n     *\n     * @param tagId\n     */\n    toggleTagOnTodo(tagId): void\n    {\n        this._todoService.toggleTagOnTodo(tagId, this.todo);\n    }\n\n    /**\n     * Has tag?\n     *\n     * @param tagId\n     * @returns {any}\n     */\n    hasTag(tagId): any\n    {\n        return this._todoService.hasTag(tagId, this.todo);\n    }\n\n    /**\n     * Add todo\n     */\n    addTodo(): void\n    {\n        this._todoService.updateTodo(this.todoForm.getRawValue());\n    }\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n    <mat-icon class=\\\"handle mr-16\\\" ngxDragHandle fxFlex=\\\"0 1 auto\\\" fxHide.xs>\\n        drag_handle\\n    </mat-icon>\\n\\n    <mat-checkbox [(ngModel)]=\\\"selected\\\" (ngModelChange)=\\\"onSelectedChange()\\\"\\n                  class=\\\"mr-16\\\" fxFlex=\\\"0 1 auto\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    </mat-checkbox>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxFlex>\\n\\n        <div class=\\\"info\\\" fxFlex fxFlexLayout=\\\"column\\\">\\n\\n            <div class=\\\"title\\\">\\n                {{todo.title}}\\n            </div>\\n\\n            <div class=\\\"notes\\\">\\n                {{todo.notes}}\\n            </div>\\n\\n            <div class=\\\"tags\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                <div class=\\\"tag\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" *ngFor=\\\"let tagId of todo.tags\\\">\\n                    <div class=\\\"tag-color\\\" [ngStyle]=\\\"{'background-color': tags | getById:tagId:'color'}\\\"></div>\\n                    <div class=\\\"tag-label\\\">{{tags | getById:tagId:'title'}}</div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n        <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n            <button mat-icon-button (click)=\\\"toggleImportant($event)\\\"\\n                    aria-label=\\\"Toggle important\\\" fxHide.xs>\\n                <mat-icon class=\\\"red-fg\\\" *ngIf=\\\"todo.important\\\">error</mat-icon>\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"!todo.important\\\">error_outline</mat-icon>\\n            </button>\\n\\n            <button mat-icon-button (click)=\\\"toggleStar($event)\\\"\\n                    aria-label=\\\"Toggle star\\\" fxHide.xs>\\n                <mat-icon class=\\\"amber-fg\\\" *ngIf=\\\"todo.starred\\\">star</mat-icon>\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"!todo.starred\\\">star_outline</mat-icon>\\n            </button>\\n\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"moreMenu\\\" aria-label=\\\"More\\\" (click)=\\\"$event.stopPropagation()\\\"\\n                    fxHide.xs>\\n                <mat-icon class=\\\"secondary-text\\\">more_vert</mat-icon>\\n            </button>\\n\\n            <mat-menu #moreMenu=\\\"matMenu\\\">\\n                <button mat-menu-item aria-label=\\\"toggle done\\\" (click)=\\\"toggleCompleted($event)\\\">\\n                    <ng-container *ngIf=\\\"todo.completed\\\">\\n                        <mat-icon>check_box</mat-icon>\\n                        <span>Mark as undone</span>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!todo.completed\\\">\\n                        <mat-icon>check_box_outline_blank</mat-icon>\\n                        <span>Mark as done</span>\\n                    </ng-container>\\n                </button>\\n\\n                <button mat-menu-item aria-label=\\\"toggle important\\\" (click)=\\\"toggleImportant($event)\\\">\\n                    <ng-container *ngIf=\\\"todo.important\\\">\\n                        <mat-icon>error</mat-icon>\\n                        <span>Remove important</span>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!todo.important\\\">\\n                        <mat-icon>error_outline</mat-icon>\\n                        <span>Mark as important</span>\\n                    </ng-container>\\n                </button>\\n\\n                <button mat-menu-item aria-label=\\\"toggle star\\\" (click)=\\\"toggleStar($event)\\\">\\n                    <ng-container *ngIf=\\\"todo.starred\\\">\\n                        <mat-icon>star</mat-icon>\\n                        <span>Remove star</span>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!todo.starred\\\">\\n                        <mat-icon>star_outline</mat-icon>\\n                        <span>Add star</span>\\n                    </ng-container>\\n                </button>\\n            </mat-menu>\\n\\n        </div>\\n\\n    </div>\\n\\n</div>\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\ntodo-list-item {\\n  display: block;\\n  position: relative;\\n  padding: 16px 16px 16px 24px;\\n  border-bottom: 1px solid;\\n  text-transform: none;\\n  cursor: pointer;\\n  flex-shrink: 0; }\\ntodo-list-item .handle {\\n    height: 48px;\\n    line-height: 48px;\\n    cursor: move;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none; }\\ntodo-list-item.move-disabled .handle {\\n    display: none; }\\ntodo-list-item .tags .tag {\\n    font-size: 11px;\\n    border-radius: 2px;\\n    margin: 8px 4px 0 0;\\n    padding: 3px 8px; }\\ntodo-list-item .tags .tag .tag-color {\\n      width: 8px;\\n      height: 8px;\\n      margin-right: 8px;\\n      border-radius: 50%; }\\ntodo-list-item.completed .title,\\n  todo-list-item.completed .notes {\\n    text-decoration: line-through; }\\ntodo-list-item .info {\\n    margin: 0 16px 0 8px; }\\ntodo-list-item .info .title {\\n      font-size: 15px;\\n      font-weight: 500; }\\ntodo-list-item .info .notes {\\n      margin-top: 4px; }\\ntodo-list-item .buttons .is-starred {\\n    margin: 0 0 0 16px; }\\ntodo-list-item .buttons .is-important {\\n    margin: 0; }\\ntodo-list-item:not(.has-handle):not(.move-disabled),\\n  todo-list-item.has-handle [ngxdraghandle],\\n  todo-list-item.has-handle [ngxDragHandle] {\\n    cursor: move; }\\ntodo-list-item .ngx-dnd-content {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none; }\\ntodo-list-item.gu-mirror {\\n    position: fixed !important;\\n    margin: 0 !important;\\n    z-index: 9999 !important;\\n    opacity: 0.8;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\\\";\\n    filter: alpha(opacity=80);\\n    box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\ntodo-list-item.gu-hide {\\n    display: none !important; }\\ntodo-list-item.gu-unselectable {\\n    -webkit-user-select: none !important;\\n    -moz-user-select: none !important;\\n    -ms-user-select: none !important;\\n    user-select: none !important; }\\ntodo-list-item.gu-transit {\\n    opacity: 0.2;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)\\\";\\n    filter: alpha(opacity=20); }\\n\"","import { Component, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector     : 'todo-list-item',\n    templateUrl  : './todo-list-item.component.html',\n    styleUrls    : ['./todo-list-item.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TodoListItemComponent implements OnInit, OnDestroy\n{\n    tags: any[];\n\n    @Input()\n    todo: Todo;\n\n    @HostBinding('class.selected')\n    selected: boolean;\n\n    @HostBinding('class.completed')\n    completed: boolean;\n\n    @HostBinding('class.move-disabled')\n    moveDisabled: boolean;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {TodoService} _todoService\n     * @param {ActivatedRoute} _activatedRoute\n     */\n    constructor(\n        private _todoService: TodoService,\n        private _activatedRoute: ActivatedRoute\n    )\n    {\n        // Disable move if path is not /all\n        if ( _activatedRoute.snapshot.url[0].path !== 'all' )\n        {\n            this.moveDisabled = true;\n        }\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Set the initial values\n        this.todo = new Todo(this.todo);\n        this.completed = this.todo.completed;\n\n        // Subscribe to update on selected todo change\n        this._todoService.onSelectedTodosChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedTodos => {\n                this.selected = false;\n\n                if ( selectedTodos.length > 0 )\n                {\n                    for ( const todo of selectedTodos )\n                    {\n                        if ( todo.id === this.todo.id )\n                        {\n                            this.selected = true;\n                            break;\n                        }\n                    }\n                }\n            });\n\n        // Subscribe to update on tag change\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(tags => {\n                this.tags = tags;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On selected change\n     */\n    onSelectedChange(): void\n    {\n        this._todoService.toggleSelectedTodo(this.todo.id);\n    }\n\n    /**\n     * Toggle star\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n\n        this.todo.toggleStar();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Important\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n\n        this.todo.toggleImportant();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Completed\n     */\n    toggleCompleted(event): void\n    {\n        event.stopPropagation();\n\n        this.todo.toggleCompleted();\n        this._todoService.updateTodo(this.todo);\n    }\n}\n","module.exports = \"<div *ngIf=\\\"todos.length === 0\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlexFill>\\n    <span class=\\\"no-todos-text hint-text\\\">There are no todos!</span>\\n</div>\\n<div class=\\\"todo-list\\\" ngxDroppable [model]=\\\"todos\\\" (out)=\\\"onDrop($event)\\\" [@animateStagger]=\\\"{value:'50'}\\\">\\n    <todo-list-item class=\\\"todo-list-item has-handle\\\"\\n                    *ngFor=\\\"let todo of todos\\\" [todo]=\\\"todo\\\"\\n                    ngxDraggable\\n                    [model]=\\\"todo\\\"\\n                    (click)=\\\"readTodo(todo.id)\\\"\\n                    [ngClass]=\\\"{'current-todo':todo?.id == currentTodo?.id}\\\"\\n                    matRipple\\n                    [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\n    </todo-list-item>\\n</div>\\n\"","module.exports = \"todo-list {\\n  display: flex;\\n  flex: 1 0 auto;\\n  flex-direction: column;\\n  position: relative;\\n  padding: 0;\\n  border-right: 1px solid;\\n  overflow-y: auto;\\n  -webkit-overflow-scrolling: touch; }\\n  todo-list .no-todos-text {\\n    font-size: 24px;\\n    font-weight: 300; }\\n\"","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector     : 'todo-list',\n    templateUrl  : './todo-list.component.html',\n    styleUrls    : ['./todo-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoListComponent implements OnInit, OnDestroy\n{\n    todos: Todo[];\n    currentTodo: Todo;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ActivatedRoute} _activatedRoute\n     * @param {TodoService} _todoService\n     * @param {Location} _location\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _todoService: TodoService,\n        private _location: Location\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update todos on changes\n        this._todoService.onTodosChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(todos => {\n                this.todos = todos;\n            });\n\n        // Subscribe to update current todo on changes\n        this._todoService.onCurrentTodoChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentTodo => {\n                if ( !currentTodo )\n                {\n                    // Set the current todo id to null to deselect the current todo\n                    this.currentTodo = null;\n\n                    // Handle the location changes\n                    const tagHandle    = this._activatedRoute.snapshot.params.tagHandle,\n                          filterHandle = this._activatedRoute.snapshot.params.filterHandle;\n\n                    if ( tagHandle )\n                    {\n                        this._location.go('apps/todo/tag/' + tagHandle);\n                    }\n                    else if ( filterHandle )\n                    {\n                        this._location.go('apps/todo/filter/' + filterHandle);\n                    }\n                    else\n                    {\n                        this._location.go('apps/todo/all');\n                    }\n                }\n                else\n                {\n                    this.currentTodo = currentTodo;\n                }\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Read todo\n     *\n     * @param todoId\n     */\n    readTodo(todoId): void\n    {\n        // Set current todo\n        this._todoService.setCurrentTodo(todoId);\n    }\n\n    /**\n     * On drop\n     *\n     * @param ev\n     */\n    onDrop(ev): void\n    {\n\n    }\n}\n","module.exports = \"<div id=\\\"todo\\\" class=\\\"page-layout carded left-sidebar inner-scroll\\\">\\n\\n    <!-- TOP BACKGROUND -->\\n    <div class=\\\"top-bg accent\\\"></div>\\n    <!-- / TOP BACKGROUND -->\\n\\n    <!-- SIDEBAR -->\\n    <fuse-sidebar class=\\\"sidebar\\\" name=\\\"todo-main-sidebar\\\" position=\\\"left\\\" lockedOpen=\\\"gt-md\\\">\\n        <todo-main-sidebar></todo-main-sidebar>\\n    </fuse-sidebar>\\n    <!-- / SIDEBAR -->\\n\\n    <!-- CENTER -->\\n    <div class=\\\"center\\\">\\n\\n        <!-- CONTENT HEADER -->\\n        <div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n            <div class=\\\"search-wrapper\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                <button mat-icon-button class=\\\"sidebar-toggle\\\" fxHide.gt-md\\n                        (click)=\\\"toggleSidebar('todo-main-sidebar')\\\">\\n                    <mat-icon>menu</mat-icon>\\n                </button>\\n\\n                <div class=\\\"search\\\" flex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                    <mat-icon>search</mat-icon>\\n                    <input [formControl]=\\\"searchInput\\\" placeholder=\\\"Search for a task\\\" fxFlex>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <!-- / CONTENT HEADER -->\\n\\n        <!-- CONTENT CARD -->\\n        <div class=\\\"content-card\\\" [ngClass]=\\\"{'current-todo-selected':currentTodo}\\\">\\n\\n            <!-- CONTENT TOOLBAR -->\\n            <div class=\\\"toolbar px-24 py-8\\\">\\n\\n                <div class=\\\"todo-selection\\\" fxFlex=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                    <mat-checkbox (click)=\\\"toggleSelectAll()\\\" [checked]=\\\"hasSelectedTodos\\\"\\n                                  [indeterminate]=\\\"isIndeterminate\\\"></mat-checkbox>\\n\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"selectMenu\\\">\\n                        <mat-icon>arrow_drop_down</mat-icon>\\n                    </button>\\n                    <mat-menu #selectMenu=\\\"matMenu\\\">\\n                        <button mat-menu-item (click)=\\\"selectTodos()\\\">All</button>\\n                        <button mat-menu-item (click)=\\\"deselectTodos()\\\">None</button>\\n                        <button mat-menu-item (click)=\\\"selectTodos('read', true)\\\">Read</button>\\n                        <button mat-menu-item (click)=\\\"selectTodos('read', false)\\\">Unread</button>\\n                        <button mat-menu-item (click)=\\\"selectTodos('starred', true)\\\">Starred</button>\\n                        <button mat-menu-item (click)=\\\"selectTodos('starred', false)\\\">Unstarred</button>\\n                        <button mat-menu-item (click)=\\\"selectTodos('important', true)\\\">Important</button>\\n                        <button mat-menu-item (click)=\\\"selectTodos('important', false)\\\">Unimportant</button>\\n                    </mat-menu>\\n\\n                    <div class=\\\"toolbar-separator\\\" *ngIf=\\\"hasSelectedTodos\\\"></div>\\n\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"labelMenu\\\" *ngIf=\\\"hasSelectedTodos\\\">\\n                        <mat-icon class=\\\"secondary-text\\\">label</mat-icon>\\n                    </button>\\n                    <mat-menu #labelMenu=\\\"matMenu\\\">\\n                        <button mat-menu-item *ngFor=\\\"let tag of tags\\\" (click)=\\\"toggleTagOnSelectedTodos(tag.id)\\\">\\n                            {{tag.title}}\\n                        </button>\\n                    </mat-menu>\\n                </div>\\n\\n                <div *ngIf=\\\"currentTodo\\\" fxHide.gt-lg>\\n                    <button mat-icon-button (click)=\\\"deselectCurrentTodo()\\\">\\n                        <mat-icon class=\\\"secondary-text\\\">arrow_back</mat-icon>\\n                    </button>\\n                </div>\\n\\n            </div>\\n            <!-- / CONTENT TOOLBAR -->\\n\\n            <!-- CONTENT -->\\n            <div class=\\\"content\\\" fxFlexAlign=\\\"row\\\">\\n                <todo-list fusePerfectScrollbar fxFlex></todo-list>\\n                <todo-details fusePerfectScrollbar fxFlex></todo-details>\\n            </div>\\n            <!-- / CONTENT -->\\n\\n        </div>\\n        <!-- / CONTENT CARD -->\\n\\n    </div>\\n    <!-- / CENTER -->\\n\\n</div>\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\ntodo {\\n  width: 100%; }\\ntodo .center .header .search-wrapper {\\n    box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\ntodo .center .header .search-wrapper .sidebar-toggle {\\n      margin: 0;\\n      width: 56px;\\n      height: 56px;\\n      border-radius: 0;\\n      border-right: 1px solid; }\\ntodo .center .header .search-wrapper .search {\\n      width: 100%;\\n      height: 56px;\\n      line-height: 56px;\\n      padding: 18px; }\\ntodo .center .header .search-wrapper .search input {\\n        height: 56px;\\n        padding-left: 16px;\\n        border: none;\\n        outline: none; }\\n@media (max-width: 1919px) {\\n    todo .center .content-card todo-list {\\n      border-right: 0; }\\n    todo .center .content-card todo-list,\\n    todo .center .content-card todo-details {\\n      flex: 1 0 100%; }\\n    todo .center .content-card todo-details {\\n      display: none !important; }\\n    todo .center .content-card.current-todo-selected .toolbar {\\n      padding-left: 16px !important; }\\n      todo .center .content-card.current-todo-selected .toolbar .todo-selection {\\n        display: none !important; }\\n    todo .center .content-card.current-todo-selected .content todo-list {\\n      display: none !important; }\\n    todo .center .content-card.current-todo-selected .content todo-details {\\n      display: flex !important; } }\\n\"","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n@Component({\n    selector     : 'todo',\n    templateUrl  : './todo.component.html',\n    styleUrls    : ['./todo.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoComponent implements OnInit, OnDestroy\n{\n    hasSelectedTodos: boolean;\n    isIndeterminate: boolean;\n    filters: any[];\n    tags: any[];\n    searchInput: FormControl;\n    currentTodo: Todo;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {FuseSidebarService} _fuseSidebarService\n     * @param {TodoService} _todoService\n     */\n    constructor(\n        private _fuseSidebarService: FuseSidebarService,\n        private _todoService: TodoService\n    )\n    {\n        // Set the defaults\n        this.searchInput = new FormControl('');\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._todoService.onSelectedTodosChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedTodos => {\n\n                setTimeout(() => {\n                    this.hasSelectedTodos = selectedTodos.length > 0;\n                    this.isIndeterminate = (selectedTodos.length !== this._todoService.todos.length && selectedTodos.length > 0);\n                }, 0);\n            });\n\n        this._todoService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.filters = this._todoService.filters;\n            });\n\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(tags => {\n                this.tags = this._todoService.tags;\n            });\n\n        this.searchInput.valueChanges\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(300),\n                distinctUntilChanged()\n            )\n            .subscribe(searchText => {\n                this._todoService.onSearchTextChanged.next(searchText);\n            });\n\n        this._todoService.onCurrentTodoChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(([currentTodo, formType]) => {\n                if ( !currentTodo )\n                {\n                    this.currentTodo = null;\n                }\n                else\n                {\n                    this.currentTodo = currentTodo;\n                }\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Deselect current todo\n     */\n    deselectCurrentTodo(): void\n    {\n        this._todoService.onCurrentTodoChanged.next([null, null]);\n    }\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        this._todoService.toggleSelectAll();\n    }\n\n    /**\n     * Select todos\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectTodos(filterParameter?, filterValue?): void\n    {\n        this._todoService.selectTodos(filterParameter, filterValue);\n    }\n\n    /**\n     * Deselect todos\n     */\n    deselectTodos(): void\n    {\n        this._todoService.deselectTodos();\n    }\n\n    /**\n     * Toggle tag on selected todos\n     *\n     * @param tagId\n     */\n    toggleTagOnSelectedTodos(tagId): void\n    {\n        this._todoService.toggleTagOnSelectedTodos(tagId);\n    }\n\n    /**\n     * Toggle the sidebar\n     *\n     * @param name\n     */\n    toggleSidebar(name): void\n    {\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\n    }\n}\n","export class Todo\n{\n    id: string;\n    title: string;\n    notes: string;\n    startDate: string;\n    dueDate: boolean;\n    completed: boolean;\n    starred: boolean;\n    important: boolean;\n    deleted: boolean;\n    tags: [\n        {\n            'id': number,\n            'name': string,\n            'label': string,\n            'color': string\n        }\n        ];\n\n    /**\n     * Constructor\n     *\n     * @param todo\n     */\n    constructor(todo)\n    {\n        {\n            this.id = todo.id;\n            this.title = todo.title;\n            this.notes = todo.notes;\n            this.startDate = todo.startDate;\n            this.dueDate = todo.dueDate;\n            this.completed = todo.completed;\n            this.starred = todo.starred;\n            this.important = todo.important;\n            this.deleted = todo.deleted;\n            this.tags = todo.tags || [];\n        }\n    }\n\n    /**\n     * Toggle star\n     */\n    toggleStar(): void\n    {\n        this.starred = !this.starred;\n    }\n\n    /**\n     * Toggle important\n     */\n    toggleImportant(): void\n    {\n        this.important = !this.important;\n    }\n\n    /**\n     * Toggle completed\n     */\n    toggleCompleted(): void\n    {\n        this.completed = !this.completed;\n    }\n\n    /**\n     * Toggle deleted\n     */\n    toggleDeleted(): void\n    {\n        this.deleted = !this.deleted;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n    MatButtonModule, MatCheckboxModule, MatDatepickerModule, MatFormFieldModule, MatIconModule, MatInputModule, MatMenuModule, MatRippleModule, MatSelectModule\n} from '@angular/material';\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseSidebarModule } from '@fuse/components';\n\nimport { TodoService } from 'app/main/apps/todo/todo.service';\nimport { TodoComponent } from 'app/main/apps/todo/todo.component';\nimport { TodoMainSidebarComponent } from 'app/main/apps/todo/sidebars/main/main-sidebar.component';\nimport { TodoListItemComponent } from 'app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component';\nimport { TodoListComponent } from 'app/main/apps/todo/todo-list/todo-list.component';\nimport { TodoDetailsComponent } from 'app/main/apps/todo/todo-details/todo-details.component';\n\nconst routes: Routes = [\n    {\n        path     : 'all',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'all/:todoId',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'tag/:tagHandle',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'tag/:tagHandle/:todoId',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle/:todoId',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path      : '**',\n        redirectTo: 'all'\n    }\n];\n\n@NgModule({\n    declarations: [\n        TodoComponent,\n        TodoMainSidebarComponent,\n        TodoListItemComponent,\n        TodoListComponent,\n        TodoDetailsComponent\n    ],\n    imports     : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatMenuModule,\n        MatRippleModule,\n        MatSelectModule,\n\n        NgxDnDModule,\n\n        FuseSharedModule,\n        FuseSidebarModule\n    ],\n    providers   : [\n        TodoService\n    ]\n})\nexport class TodoModule\n{\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { FuseUtils } from '@fuse/utils';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\n\n@Injectable()\nexport class TodoService implements Resolve<any>\n{\n    todos: Todo[];\n    selectedTodos: Todo[];\n    currentTodo: Todo;\n    searchText: string;\n    filters: any[];\n    tags: any[];\n    routeParams: any;\n\n    onTodosChanged: BehaviorSubject<any>;\n    onSelectedTodosChanged: BehaviorSubject<any>;\n    onCurrentTodoChanged: BehaviorSubject<any>;\n    onFiltersChanged: BehaviorSubject<any>;\n    onTagsChanged: BehaviorSubject<any>;\n    onSearchTextChanged: BehaviorSubject<any>;\n    onNewTodoClicked: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     * @param {Location} _location\n     */\n    constructor(\n        private _httpClient: HttpClient,\n        private _location: Location\n    )\n    {\n        // Set the defaults\n        this.selectedTodos = [];\n        this.searchText = '';\n        this.onTodosChanged = new BehaviorSubject([]);\n        this.onSelectedTodosChanged = new BehaviorSubject([]);\n        this.onCurrentTodoChanged = new BehaviorSubject([]);\n        this.onFiltersChanged = new BehaviorSubject([]);\n        this.onTagsChanged = new BehaviorSubject([]);\n        this.onSearchTextChanged = new BehaviorSubject('');\n        this.onNewTodoClicked = new Subject();\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        this.routeParams = route.params;\n\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.getFilters(),\n                this.getTags(),\n                this.getTodos()\n            ]).then(\n                () => {\n                    if ( this.routeParams.todoId )\n                    {\n                        this.setCurrentTodo(this.routeParams.todoId);\n                    }\n                    else\n                    {\n                        this.setCurrentTodo(null);\n                    }\n\n                    this.onSearchTextChanged.subscribe(searchText => {\n                        if ( searchText !== '' )\n                        {\n                            this.searchText = searchText;\n                            this.getTodos();\n                        }\n                        else\n                        {\n                            this.searchText = searchText;\n                            this.getTodos();\n                        }\n                    });\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get all filters\n     *\n     * @returns {Promise<any>}\n     */\n    getFilters(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/todo-filters')\n                .subscribe((response: any) => {\n                    this.filters = response;\n                    this.onFiltersChanged.next(this.filters);\n                    resolve(this.filters);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all tags\n     *\n     * @returns {Promise<any>}\n     */\n    getTags(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/todo-tags')\n                .subscribe((response: any) => {\n                    this.tags = response;\n                    this.onTagsChanged.next(this.tags);\n                    resolve(this.tags);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get todos\n     *\n     * @returns {Promise<Todo[]>}\n     */\n    getTodos(): Promise<Todo[]>\n    {\n        if ( this.routeParams.tagHandle )\n        {\n            return this.getTodosByTag(this.routeParams.tagHandle);\n        }\n\n        if ( this.routeParams.filterHandle )\n        {\n            return this.getTodosByFilter(this.routeParams.filterHandle);\n        }\n\n        return this.getTodosByParams(this.routeParams);\n    }\n\n    /**\n     * Get todos by params\n     *\n     * @param handle\n     * @returns {Promise<Todo[]>}\n     */\n    getTodosByParams(handle): Promise<Todo[]>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/todo-todos')\n                .subscribe((todos: any) => {\n                    this.todos = todos.map(todo => {\n                        return new Todo(todo);\n                    });\n\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\n\n                    this.onTodosChanged.next(this.todos);\n\n                    resolve(this.todos);\n                });\n        });\n    }\n\n    /**\n     * Get todos by filter\n     *\n     * @param handle\n     * @returns {Promise<Todo[]>}\n     */\n    getTodosByFilter(handle): Promise<Todo[]>\n    {\n\n        let param = handle + '=true';\n\n        if ( handle === 'dueDate' )\n        {\n            param = handle + '=^$|\\\\s+';\n        }\n\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/todo-todos?' + param)\n                .subscribe((todos: any) => {\n\n                    this.todos = todos.map(todo => {\n                        return new Todo(todo);\n                    });\n\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\n\n                    this.onTodosChanged.next(this.todos);\n\n                    resolve(this.todos);\n\n                }, reject);\n        });\n    }\n\n    /**\n     * Get todos by tag\n     *\n     * @param handle\n     * @returns {Promise<Todo[]>}\n     */\n    getTodosByTag(handle): Promise<Todo[]>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/todo-tags?handle=' + handle)\n                .subscribe((tags: any) => {\n\n                    const tagId = tags[0].id;\n\n                    this._httpClient.get('api/todo-todos?tags=' + tagId)\n                        .subscribe((todos: any) => {\n\n                            this.todos = todos.map(todo => {\n                                return new Todo(todo);\n                            });\n\n                            this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\n\n                            this.onTodosChanged.next(this.todos);\n\n                            resolve(this.todos);\n\n                        }, reject);\n                });\n        });\n    }\n\n    /**\n     * Toggle selected todo by id\n     *\n     * @param id\n     */\n    toggleSelectedTodo(id): void\n    {\n        // First, check if we already have that todo as selected...\n        if ( this.selectedTodos.length > 0 )\n        {\n            for ( const todo of this.selectedTodos )\n            {\n                // ...delete the selected todo\n                if ( todo.id === id )\n                {\n                    const index = this.selectedTodos.indexOf(todo);\n\n                    if ( index !== -1 )\n                    {\n                        this.selectedTodos.splice(index, 1);\n\n                        // Trigger the next event\n                        this.onSelectedTodosChanged.next(this.selectedTodos);\n\n                        // Return\n                        return;\n                    }\n                }\n            }\n        }\n\n        // If we don't have it, push as selected\n        this.selectedTodos.push(\n            this.todos.find(todo => {\n                return todo.id === id;\n            })\n        );\n\n        // Trigger the next event\n        this.onSelectedTodosChanged.next(this.selectedTodos);\n    }\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        if ( this.selectedTodos.length > 0 )\n        {\n            this.deselectTodos();\n        }\n        else\n        {\n            this.selectTodos();\n        }\n\n    }\n\n    /**\n     * Select todos\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectTodos(filterParameter?, filterValue?): void\n    {\n        this.selectedTodos = [];\n\n        // If there is no filter, select all todos\n        if ( filterParameter === undefined || filterValue === undefined )\n        {\n            this.selectedTodos = this.todos;\n        }\n        else\n        {\n            this.selectedTodos.push(...\n                this.todos.filter(todo => {\n                    return todo[filterParameter] === filterValue;\n                })\n            );\n        }\n\n        // Trigger the next event\n        this.onSelectedTodosChanged.next(this.selectedTodos);\n    }\n\n    /**\n     * Deselect todos\n     */\n    deselectTodos(): void\n    {\n        this.selectedTodos = [];\n\n        // Trigger the next event\n        this.onSelectedTodosChanged.next(this.selectedTodos);\n    }\n\n    /**\n     * Set current todo by id\n     *\n     * @param id\n     */\n    setCurrentTodo(id): void\n    {\n        this.currentTodo = this.todos.find(todo => {\n            return todo.id === id;\n        });\n\n        this.onCurrentTodoChanged.next([this.currentTodo, 'edit']);\n\n        const tagHandle    = this.routeParams.tagHandle,\n              filterHandle = this.routeParams.filterHandle;\n\n        if ( tagHandle )\n        {\n            this._location.go('apps/todo/tag/' + tagHandle + '/' + id);\n        }\n        else if ( filterHandle )\n        {\n            this._location.go('apps/todo/filter/' + filterHandle + '/' + id);\n        }\n        else\n        {\n            this._location.go('apps/todo/all/' + id);\n        }\n    }\n\n    /**\n     * Toggle tag on selected todos\n     *\n     * @param tagId\n     */\n    toggleTagOnSelectedTodos(tagId): void\n    {\n        this.selectedTodos.map(todo => {\n            this.toggleTagOnTodo(tagId, todo);\n        });\n    }\n\n    /**\n     * Toggle tag on todo\n     *\n     * @param tagId\n     * @param todo\n     */\n    toggleTagOnTodo(tagId, todo): void\n    {\n        const index = todo.tags.indexOf(tagId);\n\n        if ( index !== -1 )\n        {\n            todo.tags.splice(index, 1);\n        }\n        else\n        {\n            todo.tags.push(tagId);\n        }\n\n        this.updateTodo(todo);\n    }\n\n    /**\n     * Has tag?\n     *\n     * @param tagId\n     * @param todo\n     * @returns {boolean}\n     */\n    hasTag(tagId, todo): any\n    {\n        if ( !todo.tags )\n        {\n            return false;\n        }\n\n        return todo.tags.indexOf(tagId) !== -1;\n    }\n\n    /**\n     * Update the todo\n     *\n     * @param todo\n     * @returns {Promise<any>}\n     */\n    updateTodo(todo): any\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.post('api/todo-todos/' + todo.id, {...todo})\n                .subscribe(response => {\n\n                    this.getTodos().then(todos => {\n\n                        resolve(todos);\n\n                    }, reject);\n                });\n        });\n    }\n}\n"],"sourceRoot":""}