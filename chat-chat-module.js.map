{"version":3,"sources":["webpack:///./src/app/main/apps/chat/chat-start/chat-start.component.html","webpack:///./src/app/main/apps/chat/chat-start/chat-start.component.scss","webpack:///./src/app/main/apps/chat/chat-start/chat-start.component.ts","webpack:///./src/app/main/apps/chat/chat-view/chat-view.component.html","webpack:///./src/app/main/apps/chat/chat-view/chat-view.component.scss","webpack:///./src/app/main/apps/chat/chat-view/chat-view.component.ts","webpack:///./src/app/main/apps/chat/chat.component.html","webpack:///./src/app/main/apps/chat/chat.component.scss","webpack:///./src/app/main/apps/chat/chat.component.ts","webpack:///./src/app/main/apps/chat/chat.module.ts","webpack:///./src/app/main/apps/chat/chat.service.ts","webpack:///./src/app/main/apps/chat/sidenavs/left/chats/chats.component.html","webpack:///./src/app/main/apps/chat/sidenavs/left/chats/chats.component.scss","webpack:///./src/app/main/apps/chat/sidenavs/left/chats/chats.component.ts","webpack:///./src/app/main/apps/chat/sidenavs/left/left.component.html","webpack:///./src/app/main/apps/chat/sidenavs/left/left.component.scss","webpack:///./src/app/main/apps/chat/sidenavs/left/left.component.ts","webpack:///./src/app/main/apps/chat/sidenavs/left/user/user.component.html","webpack:///./src/app/main/apps/chat/sidenavs/left/user/user.component.scss","webpack:///./src/app/main/apps/chat/sidenavs/left/user/user.component.ts","webpack:///./src/app/main/apps/chat/sidenavs/right/contact/contact.component.html","webpack:///./src/app/main/apps/chat/sidenavs/right/contact/contact.component.scss","webpack:///./src/app/main/apps/chat/sidenavs/right/contact/contact.component.ts","webpack:///./src/app/main/apps/chat/sidenavs/right/right.component.html","webpack:///./src/app/main/apps/chat/sidenavs/right/right.component.scss","webpack:///./src/app/main/apps/chat/sidenavs/right/right.component.ts"],"names":[],"mappings":"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","file":"chat-chat-module.js","sourcesContent":["module.exports = \"<div fxFlex fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n    <div class=\\\"big-circle mat-elevation-z6 app-logo\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\"\\n         [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">\\n\\n        <mat-icon class=\\\"s-64 s-md-128 mat-accent\\\">chat</mat-icon>\\n\\n    </div>\\n\\n    <span class=\\\"app-title mt-48 mb-16\\\" [@animate]=\\\"{value:'*',params:{delay:'100ms',y:'25px'}}\\\">Chat App</span>\\n\\n    <span fxHide fxShow.gt-md class=\\\"app-message\\\" [@animate]=\\\"{value:'*',params:{delay:'200ms',y:'50px'}}\\\">\\n        Select a contact to start a chat!\\n    </span>\\n\\n    <button mat-raised-button fxHide.gt-md fuseMatSidenavToggler=\\\"chat-left-sidenav\\\">\\n        Select a contact to start a chat!\\n    </button>\\n\\n</div>\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nchat-start {\\n  display: flex;\\n  flex: 1; }\\nchat-start .big-circle {\\n    border-radius: 50%;\\n    width: 240px;\\n    height: 240px;\\n    line-height: 240px;\\n    text-align: center; }\\n@media (max-width: 959px) {\\n      chat-start .big-circle {\\n        width: 160px;\\n        height: 160px;\\n        line-height: 160px; } }\\nchat-start .app-title {\\n    font-weight: 500;\\n    font-size: 32px; }\\nchat-start .secondary-text {\\n    font-size: 16px; }\\n\"","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { fuseAnimations } from '@fuse/animations';\n\n@Component({\n    selector     : 'chat-start',\n    templateUrl  : './chat-start.component.html',\n    styleUrls    : ['./chat-start.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatStartComponent\n{\n    constructor()\n    {\n    }\n}\n","module.exports = \"<!-- CHAT -->\\n<div class=\\\"chat\\\" fxFlex fxLayout=\\\"column\\\">\\n\\n    <!-- CHAT TOOLBAR -->\\n    <mat-toolbar class=\\\"chat-toolbar\\\">\\n\\n        <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                <!-- RESPONSIVE CHATS BUTTON-->\\n                <button mat-icon-button fxHide.gt-md class=\\\"responsive-chats-button mr-16\\\"\\n                        fuseMatSidenavToggler=\\\"chat-left-sidenav\\\"\\n                        aria-label=\\\"chats button\\\">\\n                    <mat-icon>chat</mat-icon>\\n                </button>\\n                <!-- / RESPONSIVE CHATS BUTTON-->\\n\\n                <!-- CHAT CONTACT-->\\n                <div class=\\\"chat-contact\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"\\n                     fuseMatSidenavToggler=\\\"chat-right-sidenav\\\" (click)=\\\"selectContact()\\\">\\n\\n                    <div class=\\\"avatar-wrapper\\\">\\n\\n                        <img [src]=\\\"contact.avatar\\\"\\n                             class=\\\"avatar\\\"\\n                             alt=\\\"{{contact.name}}\\\"/>\\n\\n                        <mat-icon class=\\\"s-16 status\\\"\\n                                  [ngClass]=\\\"contact.status\\\">\\n                        </mat-icon>\\n                    </div>\\n\\n                    <div class=\\\"chat-contact-name\\\">\\n                        {{contact.name}}\\n                    </div>\\n\\n                </div>\\n                <!-- / CHAT CONTACT-->\\n            </div>\\n\\n            <div>\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"contactMenu\\\" aria-label=\\\"more\\\">\\n                    <mat-icon>more_vert</mat-icon>\\n                </button>\\n\\n                <mat-menu #contactMenu=\\\"matMenu\\\">\\n                    <button mat-menu-item fuseMatSidenavToggler=\\\"chat-right-sidenav\\\" (click)=\\\"selectContact()\\\">\\n                        Contact Info\\n                    </button>\\n                </mat-menu>\\n            </div>\\n\\n        </div>\\n    </mat-toolbar>\\n    <!-- / CHAT TOOLBAR -->\\n\\n    <!-- CHAT CONTENT -->\\n    <div id=\\\"chat-content\\\" fxFlex=\\\"1 1 auto\\\"  fusePerfectScrollbar>\\n\\n        <!-- CHAT MESSAGES -->\\n        <div class=\\\"chat-messages\\\">\\n\\n            <!-- MESSAGE -->\\n            <div *ngFor=\\\"let message of dialog; let i = index\\\" class=\\\"message-row\\\"\\n                 [ngClass]=\\\"{\\n                            'me': message.who === user.id,\\n                            'contact': message.who !== user.id,\\n                            'first-of-group': isFirstMessageOfGroup(message, i),\\n                            'last-of-group': isLastMessageOfGroup(message, i)\\n                            }\\\">\\n\\n                <img *ngIf=\\\"shouldShowContactAvatar(message, i)\\\"\\n                     src=\\\"{{contact.avatar}}\\\"\\n                     class=\\\"avatar\\\">\\n\\n                <div class=\\\"bubble\\\">\\n                    <div class=\\\"message\\\">{{message.message}}</div>\\n                    <div class=\\\"time secondary-text\\\">{{message.time | date:'short'}}</div>\\n                </div>\\n\\n            </div>\\n            <!-- / MESSAGE -->\\n\\n        </div>\\n        <!-- CHAT MESSAGES -->\\n\\n    </div>\\n    <!-- / CHAT CONTENT -->\\n\\n    <!-- CHAT FOOTER -->\\n    <div class=\\\"chat-footer\\\" fxFlex=\\\"0 0 auto\\\" fxLayout=\\\"column\\\">\\n\\n        <!-- REPLY FORM -->\\n        <div class=\\\"reply-form\\\" fxFlex=\\\"0 0 auto\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n            <form #replyForm=\\\"ngForm\\\"\\n                  (ngSubmit)=\\\"reply($event)\\\"\\n                  (keydown.enter)=\\\"reply($event)\\\"\\n                  fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                <mat-form-field class=\\\"message-text\\\" fxFlex floatLabel=\\\"never\\\" appearance=\\\"standard\\\">\\n                    <textarea matInput #replyInput placeholder=\\\"Type your message\\\"\\n                              ngModel name=\\\"message\\\" [rows]=\\\"1\\\" [matTextareaAutosize]=\\\"true\\\"></textarea>\\n                </mat-form-field>\\n\\n                <button class=\\\"send-message-button\\\" mat-icon-button type=\\\"submit\\\" aria-label=\\\"Send message\\\">\\n                    <mat-icon class=\\\"secondary-text\\\">send</mat-icon>\\n                </button>\\n\\n            </form>\\n\\n        </div>\\n        <!-- / REPLY FORM -->\\n\\n    </div>\\n    <!-- / CHAT FOOTER-->\\n\\n</div>\\n<!-- / CHAT -->\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nchat-view {\\n  display: flex;\\n  flex: 1 0 auto;\\n  overflow: hidden;\\n  max-width: 100%; }\\nchat-view .chat .chat-toolbar {\\n    min-height: 64px;\\n    border-bottom: 1px solid; }\\nchat-view .chat .chat-toolbar .responsive-chats-button {\\n      padding: 0; }\\nchat-view .chat .chat-toolbar .chat-contact {\\n      cursor: pointer; }\\nchat-view .chat .chat-toolbar .chat-contact .avatar {\\n        margin-right: 16px; }\\nchat-view .chat #chat-content {\\n    background: transparent;\\n    overflow: auto;\\n    -webkit-overflow-scrolling: touch; }\\nchat-view .chat #chat-content .chat-messages {\\n      position: relative;\\n      padding: 16px 0 40px 40px; }\\nchat-view .chat #chat-content .chat-messages .message-row {\\n        position: relative;\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        justify-content: flex-end;\\n        padding: 0 16px 4px 16px; }\\nchat-view .chat #chat-content .chat-messages .message-row .avatar {\\n          position: absolute;\\n          left: -32px;\\n          margin: 0; }\\nchat-view .chat #chat-content .chat-messages .message-row .bubble {\\n          position: relative;\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          padding: 12px;\\n          max-width: 100%; }\\nchat-view .chat #chat-content .chat-messages .message-row .bubble .message {\\n            white-space: pre-wrap;\\n            line-height: 1.2; }\\nchat-view .chat #chat-content .chat-messages .message-row .bubble .time {\\n            position: absolute;\\n            display: none;\\n            width: 100%;\\n            font-size: 11px;\\n            margin-top: 8px;\\n            top: 100%;\\n            left: 0;\\n            white-space: nowrap; }\\nchat-view .chat #chat-content .chat-messages .message-row.contact .bubble {\\n          border-top-left-radius: 5px;\\n          border-bottom-left-radius: 5px;\\n          border-top-right-radius: 20px;\\n          border-bottom-right-radius: 20px; }\\nchat-view .chat #chat-content .chat-messages .message-row.contact .bubble .time {\\n            margin-left: 12px; }\\nchat-view .chat #chat-content .chat-messages .message-row.contact.first-of-group .bubble {\\n          border-top-left-radius: 20px; }\\nchat-view .chat #chat-content .chat-messages .message-row.contact.last-of-group .bubble {\\n          border-bottom-left-radius: 20px; }\\nchat-view .chat #chat-content .chat-messages .message-row.me {\\n          padding-left: 40px; }\\nchat-view .chat #chat-content .chat-messages .message-row.me .avatar {\\n            order: 2;\\n            margin: 0 0 0 16px; }\\nchat-view .chat #chat-content .chat-messages .message-row.me .bubble {\\n            margin-left: auto;\\n            border-top-left-radius: 20px;\\n            border-bottom-left-radius: 20px;\\n            border-top-right-radius: 5px;\\n            border-bottom-right-radius: 5px; }\\nchat-view .chat #chat-content .chat-messages .message-row.me .bubble .time {\\n              justify-content: flex-end;\\n              right: 0;\\n              margin-right: 12px; }\\nchat-view .chat #chat-content .chat-messages .message-row.me.first-of-group .bubble {\\n            border-top-right-radius: 20px; }\\nchat-view .chat #chat-content .chat-messages .message-row.me.last-of-group .bubble {\\n            border-bottom-right-radius: 20px; }\\nchat-view .chat #chat-content .chat-messages .message-row.contact + .me,\\n        chat-view .chat #chat-content .chat-messages .message-row.me + .contact {\\n          padding-top: 20px;\\n          margin-top: 20px; }\\nchat-view .chat #chat-content .chat-messages .message-row.first-of-group .bubble {\\n          border-top-left-radius: 20px;\\n          padding-top: 13px; }\\nchat-view .chat #chat-content .chat-messages .message-row.last-of-group .bubble {\\n          border-bottom-left-radius: 20px;\\n          padding-bottom: 13px; }\\nchat-view .chat #chat-content .chat-messages .message-row.last-of-group .bubble .time {\\n            display: flex; }\\nchat-view .chat .chat-footer {\\n    border-top: 1px solid;\\n    padding: 8px 8px 8px 16px; }\\nchat-view .chat .chat-footer .reply-form {\\n      position: relative; }\\nchat-view .chat .chat-footer .reply-form .message-text {\\n        padding: 16px 8px; }\\nchat-view .chat .chat-footer .reply-form .message-text .mat-form-field-wrapper {\\n          padding: 0; }\\nchat-view .chat .chat-footer .reply-form .message-text .mat-form-field-wrapper .mat-form-field-flex {\\n            padding: 0; }\\nchat-view .chat .chat-footer .reply-form .message-text .mat-form-field-wrapper .mat-form-field-flex .mat-form-field-infix {\\n              padding: 0;\\n              border: none;\\n              border-radius: 20px;\\n              box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\nchat-view .chat .chat-footer .reply-form .message-text .mat-form-field-wrapper .mat-form-field-flex .mat-form-field-infix textarea {\\n                overflow: hidden;\\n                margin: 16px 48px 16px 16px;\\n                width: calc(100% - 64px);\\n                padding: 0; }\\nchat-view .chat .chat-footer .reply-form .message-text .mat-form-field-wrapper .mat-form-field-underline {\\n            display: none !important; }\\nchat-view .chat .chat-footer .reply-form .send-message-button {\\n        position: absolute;\\n        right: 16px;\\n        bottom: 21px; }\\n\"","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { FusePerfectScrollbarDirective } from '@fuse/directives/fuse-perfect-scrollbar/fuse-perfect-scrollbar.directive';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-view',\n    templateUrl  : './chat-view.component.html',\n    styleUrls    : ['./chat-view.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChatViewComponent implements OnInit, OnDestroy, AfterViewInit\n{\n    user: any;\n    chat: any;\n    dialog: any;\n    contact: any;\n    replyInput: any;\n    selectedChat: any;\n\n    @ViewChild(FusePerfectScrollbarDirective)\n    directiveScroll: FusePerfectScrollbarDirective;\n\n    @ViewChildren('replyInput')\n    replyInputField;\n\n    @ViewChild('replyForm')\n    replyForm: NgForm;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.user = this._chatService.user;\n        this._chatService.onChatSelected\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(chatData => {\n                if ( chatData )\n                {\n                    this.selectedChat = chatData;\n                    this.contact = chatData.contact;\n                    this.dialog = chatData.dialog;\n                    this.readyToReply();\n                }\n            });\n    }\n\n    /**\n     * After view init\n     */\n    ngAfterViewInit(): void\n    {\n        this.replyInput = this.replyInputField.first.nativeElement;\n        this.readyToReply();\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Decide whether to show or not the contact's avatar in the message row\n     *\n     * @param message\n     * @param i\n     * @returns {boolean}\n     */\n    shouldShowContactAvatar(message, i): boolean\n    {\n        return (\n            message.who === this.contact.id &&\n            ((this.dialog[i + 1] && this.dialog[i + 1].who !== this.contact.id) || !this.dialog[i + 1])\n        );\n    }\n\n    /**\n     * Check if the given message is the first message of a group\n     *\n     * @param message\n     * @param i\n     * @returns {boolean}\n     */\n    isFirstMessageOfGroup(message, i): boolean\n    {\n        return (i === 0 || this.dialog[i - 1] && this.dialog[i - 1].who !== message.who);\n    }\n\n    /**\n     * Check if the given message is the last message of a group\n     *\n     * @param message\n     * @param i\n     * @returns {boolean}\n     */\n    isLastMessageOfGroup(message, i): boolean\n    {\n        return (i === this.dialog.length - 1 || this.dialog[i + 1] && this.dialog[i + 1].who !== message.who);\n    }\n\n    /**\n     * Select contact\n     */\n    selectContact(): void\n    {\n        this._chatService.selectContact(this.contact);\n    }\n\n    /**\n     * Ready to reply\n     */\n    readyToReply(): void\n    {\n        setTimeout(() => {\n            this.focusReplyInput();\n            this.scrollToBottom();\n        });\n    }\n\n    /**\n     * Focus to the reply input\n     */\n    focusReplyInput(): void\n    {\n        setTimeout(() => {\n            this.replyInput.focus();\n        });\n    }\n\n    /**\n     * Scroll to the bottom\n     *\n     * @param {number} speed\n     */\n    scrollToBottom(speed?: number): void\n    {\n        speed = speed || 400;\n        if ( this.directiveScroll )\n        {\n            this.directiveScroll.update();\n\n            setTimeout(() => {\n                this.directiveScroll.scrollToBottom(0, speed);\n            });\n        }\n    }\n\n    /**\n     * Reply\n     */\n    reply(event): void\n    {\n        event.preventDefault();\n\n        if ( !this.replyForm.form.value.message )\n        {\n            return;\n        }\n\n        // Message\n        const message = {\n            who    : this.user.id,\n            message: this.replyForm.form.value.message,\n            time   : new Date().toISOString()\n        };\n\n        // Add the message to the chat\n        this.dialog.push(message);\n\n        // Reset the reply form\n        this.replyForm.reset();\n\n        // Update the server\n        this._chatService.updateDialog(this.selectedChat.chatId, this.dialog).then(response => {\n            this.readyToReply();\n        });\n    }\n}\n","module.exports = \"<div id=\\\"chat\\\" class=\\\"page-layout carded fullwidth inner-scroll\\\">\\n\\n    <!-- TOP BACKGROUND -->\\n    <div class=\\\"top-bg accent\\\"></div>\\n    <!-- / TOP BACKGROUND -->\\n\\n    <!-- CENTER -->\\n    <div class=\\\"center\\\">\\n\\n        <!-- CONTENT CARD -->\\n        <div class=\\\"content-card\\\">\\n\\n            <mat-sidenav-container>\\n\\n                <!-- LEFT SIDENAV -->\\n                <mat-sidenav class=\\\"sidenav\\\" position=\\\"start\\\" opened=\\\"true\\\" mode=\\\"side\\\"\\n                             fuseMatSidenavHelper=\\\"chat-left-sidenav\\\" matIsLockedOpen=\\\"gt-md\\\">\\n                    <chat-left-sidenav></chat-left-sidenav>\\n                </mat-sidenav>\\n                <!-- / LEFT SIDENAV -->\\n\\n                <!-- CONTENT -->\\n                <chat-start *ngIf=\\\"!selectedChat\\\"></chat-start>\\n\\n                <chat-view *ngIf=\\\"selectedChat\\\"></chat-view>\\n                <!-- / CONTENT -->\\n\\n                <!-- RIGHT SIDENAV -->\\n                <mat-sidenav class=\\\"sidenav\\\" position=\\\"end\\\" opened=\\\"false\\\" mode=\\\"over\\\"\\n                             fuseMatSidenavHelper=\\\"chat-right-sidenav\\\">\\n                    <chat-right-sidenav></chat-right-sidenav>\\n                </mat-sidenav>\\n                <!-- / RIGHT SIDENAV -->\\n\\n            </mat-sidenav-container>\\n\\n        </div>\\n        <!-- / CONTENT CARD -->\\n\\n    </div>\\n    <!-- / CENTER -->\\n\\n</div>\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n#chat .center {\\n  padding: 32px !important;\\n  max-width: 1400px;\\n  margin: 0 auto; }\\n@media (max-width: 1279px) {\\n    #chat .center {\\n      padding: 0 !important; } }\\n#chat .center .content-card {\\n    display: flex;\\n    flex: 1;\\n    position: relative; }\\n#chat .center .content-card .mat-sidenav-container {\\n      display: flex;\\n      flex: 1;\\n      width: 100%; }\\n#chat .center .content-card .mat-sidenav-container > .mat-sidenav-content,\\n      #chat .center .content-card .mat-sidenav-container > .mat-drawer-content {\\n        display: flex;\\n        flex: 1 1 auto;\\n        min-height: 100%;\\n        height: auto; }\\n#chat .center .content-card .mat-sidenav-container > .mat-drawer-content {\\n        max-width: 100%; }\\n#chat .center .content-card .mat-sidenav-container mat-sidenav {\\n        display: flex;\\n        flex-direction: column;\\n        width: 400px;\\n        max-width: 90%;\\n        box-shadow: 0 0 1px rgba(0, 0, 0, 0.37);\\n        overflow: hidden; }\\n\"","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat',\n    templateUrl  : './chat.component.html',\n    styleUrls    : ['./chat.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatComponent implements OnInit, OnDestroy\n{\n    selectedChat: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onChatSelected\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(chatData => {\n                this.selectedChat = chatData;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {\n    MatButtonModule, MatCardModule, MatFormFieldModule, MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatRadioModule, MatSidenavModule, MatToolbarModule\n} from '@angular/material';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\nimport { ChatComponent } from 'app/main/apps/chat/chat.component';\nimport { ChatStartComponent } from 'app/main/apps/chat/chat-start/chat-start.component';\nimport { ChatViewComponent } from 'app/main/apps/chat/chat-view/chat-view.component';\nimport { ChatChatsSidenavComponent } from 'app/main/apps/chat/sidenavs/left/chats/chats.component';\nimport { ChatUserSidenavComponent } from 'app/main/apps/chat/sidenavs/left/user/user.component';\nimport { ChatLeftSidenavComponent } from 'app/main/apps/chat/sidenavs/left/left.component';\nimport { ChatRightSidenavComponent } from 'app/main/apps/chat/sidenavs/right/right.component';\nimport { ChatContactSidenavComponent } from 'app/main/apps/chat/sidenavs/right/contact/contact.component';\n\nconst routes: Routes = [\n    {\n        path: '**',\n        component: ChatComponent,\n        children: [],\n        resolve: {\n            chat: ChatService\n        }\n    }\n];\n\n@NgModule({\n    declarations: [\n        ChatComponent,\n        ChatViewComponent,\n        ChatStartComponent,\n        ChatChatsSidenavComponent,\n        ChatUserSidenavComponent,\n        ChatLeftSidenavComponent,\n        ChatRightSidenavComponent,\n        ChatContactSidenavComponent\n    ],\n    imports     : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatRadioModule,\n        MatSidenavModule,\n        MatToolbarModule,\n\n        FuseSharedModule\n    ],\n    providers   : [\n        ChatService\n    ]\n})\nexport class ChatModule\n{\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { FuseUtils } from '@fuse/utils';\n\n@Injectable()\nexport class ChatService implements Resolve<any>\n{\n    contacts: any[];\n    chats: any[];\n    user: any;\n    onChatSelected: BehaviorSubject<any>;\n    onContactSelected: BehaviorSubject<any>;\n    onChatsUpdated: Subject<any>;\n    onUserUpdated: Subject<any>;\n    onLeftSidenavViewChanged: Subject<any>;\n    onRightSidenavViewChanged: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n        // Set the defaults\n        this.onChatSelected = new BehaviorSubject(null);\n        this.onContactSelected = new BehaviorSubject(null);\n        this.onChatsUpdated = new Subject();\n        this.onUserUpdated = new Subject();\n        this.onLeftSidenavViewChanged = new Subject();\n        this.onRightSidenavViewChanged = new Subject();\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                this.getContacts(),\n                this.getChats(),\n                this.getUser()\n            ]).then(\n                ([contacts, chats, user]) => {\n                    this.contacts = contacts;\n                    this.chats = chats;\n                    this.user = user;\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get chat\n     *\n     * @param contactId\n     * @returns {Promise<any>}\n     */\n    getChat(contactId): Promise<any>\n    {\n        const chatItem = this.user.chatList.find((item) => {\n            return item.contactId === contactId;\n        });\n\n        // Create new chat, if it's not created yet.\n        if ( !chatItem )\n        {\n            this.createNewChat(contactId).then((newChats) => {\n                this.getChat(contactId);\n            });\n            return;\n        }\n\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-chats/' + chatItem.id)\n                .subscribe((response: any) => {\n                    const chat = response;\n\n                    const chatContact = this.contacts.find((contact) => {\n                        return contact.id === contactId;\n                    });\n\n                    const chatData = {\n                        chatId : chat.id,\n                        dialog : chat.dialog,\n                        contact: chatContact\n                    };\n\n                    this.onChatSelected.next({...chatData});\n\n                }, reject);\n\n        });\n\n    }\n\n    /**\n     * Create new chat\n     *\n     * @param contactId\n     * @returns {Promise<any>}\n     */\n    createNewChat(contactId): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n\n            const contact = this.contacts.find((item) => {\n                return item.id === contactId;\n            });\n\n            const chatId = FuseUtils.generateGUID();\n\n            const chat = {\n                id    : chatId,\n                dialog: []\n            };\n\n            const chatListItem = {\n                contactId      : contactId,\n                id             : chatId,\n                lastMessageTime: '2017-02-18T10:30:18.931Z',\n                name           : contact.name,\n                unread         : null\n            };\n\n            // Add new chat list item to the user's chat list\n            this.user.chatList.push(chatListItem);\n\n            // Post the created chat\n            this._httpClient.post('api/chat-chats', {...chat})\n                .subscribe((response: any) => {\n\n                    // Post the new the user data\n                    this._httpClient.post('api/chat-user/' + this.user.id, this.user)\n                        .subscribe(newUserData => {\n\n                            // Update the user data from server\n                            this.getUser().then(updatedUser => {\n                                this.onUserUpdated.next(updatedUser);\n                                resolve(updatedUser);\n                            });\n                        });\n                }, reject);\n        });\n    }\n\n    /**\n     * Select contact\n     *\n     * @param contact\n     */\n    selectContact(contact): void\n    {\n        this.onContactSelected.next(contact);\n    }\n\n    /**\n     * Set user status\n     *\n     * @param status\n     */\n    setUserStatus(status): void\n    {\n        this.user.status = status;\n    }\n\n    /**\n     * Update user data\n     *\n     * @param userData\n     */\n    updateUserData(userData): void\n    {\n        this._httpClient.post('api/chat-user/' + this.user.id, userData)\n            .subscribe((response: any) => {\n                    this.user = userData;\n                }\n            );\n    }\n\n    /**\n     * Update the chat dialog\n     *\n     * @param chatId\n     * @param dialog\n     * @returns {Promise<any>}\n     */\n    updateDialog(chatId, dialog): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n\n            const newData = {\n                id    : chatId,\n                dialog: dialog\n            };\n\n            this._httpClient.post('api/chat-chats/' + chatId, newData)\n                .subscribe(updatedChat => {\n                    resolve(updatedChat);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get contacts\n     *\n     * @returns {Promise<any>}\n     */\n    getContacts(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-contacts')\n                .subscribe((response: any) => {\n                    resolve(response);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get chats\n     *\n     * @returns {Promise<any>}\n     */\n    getChats(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-chats')\n                .subscribe((response: any) => {\n                    resolve(response);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get user\n     *\n     * @returns {Promise<any>}\n     */\n    getUser(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/chat-user')\n                .subscribe((response: any) => {\n                    resolve(response[0]);\n                }, reject);\n        });\n    }\n}\n","module.exports = \"<!-- SIDENAV HEADER -->\\n<div class=\\\"sidenav-header\\\">\\n    <!-- CHATS TOOLBAR -->\\n    <mat-toolbar>\\n\\n        <!-- TOOLBAR TOP -->\\n        <mat-toolbar-row fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n            <!-- USER AVATAR WRAPPER -->\\n            <div class=\\\"avatar-wrapper\\\">\\n\\n                <!-- USER AVATAR -->\\n                <img (click)=\\\"changeLeftSidenavView('user')\\\"\\n                     src=\\\"{{user.avatar}}\\\"\\n                     class=\\\"mat-avatar avatar\\\"\\n                     alt=\\\"{{user.name}}\\\"/>\\n                <!-- / USER AVATAR -->\\n\\n                <mat-icon class=\\\"s-16 status\\\" [ngClass]=\\\"user.status\\\"\\n                          [matMenuTriggerFor]=\\\"userStatusMenu\\\"></mat-icon>\\n\\n                <!-- USER STATUS -->\\n                <mat-menu id=\\\"user-status-menu\\\" #userStatusMenu=\\\"matMenu\\\">\\n\\n                    <button mat-menu-item (click)=\\\"setUserStatus('online')\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                            <mat-icon class=\\\"s-16 status online\\\"></mat-icon>\\n                            <span>Online</span>\\n                        </div>\\n                    </button>\\n\\n                    <button mat-menu-item (click)=\\\"setUserStatus('away')\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                            <mat-icon class=\\\"s-16 status away\\\"></mat-icon>\\n                            <span>Away</span>\\n                        </div>\\n                    </button>\\n\\n                    <button mat-menu-item (click)=\\\"setUserStatus('do-not-disturb')\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                            <mat-icon class=\\\"s-16 status do-not-disturb\\\"></mat-icon>\\n                            <span>Do not disturb</span>\\n                        </div>\\n                    </button>\\n\\n                    <button mat-menu-item (click)=\\\"setUserStatus('offline')\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                            <mat-icon class=\\\"s-16 status offline\\\"></mat-icon>\\n                            <span>Offline</span>\\n                        </div>\\n                    </button>\\n                </mat-menu>\\n                <!-- / USER STATUS -->\\n\\n            </div>\\n            <!-- / USER AVATAR -->\\n\\n            <div>\\n                <button mat-icon-button\\n                        [matMenuTriggerFor]=\\\"userMenu\\\"\\n                        aria-label=\\\"more\\\">\\n                    <mat-icon>more_vert</mat-icon>\\n                </button>\\n                <mat-menu #userMenu=\\\"matMenu\\\">\\n                    <button mat-menu-item (click)=\\\"changeLeftSidenavView('user')\\\">\\n                        Profile\\n                    </button>\\n                    <button mat-menu-item (click)=\\\"logout()\\\">\\n                        Logout\\n                    </button>\\n                </mat-menu>\\n            </div>\\n\\n        </mat-toolbar-row>\\n        <!-- / TOOLBAR TOP -->\\n\\n        <!-- TOOLBAR BOTTOM -->\\n        <mat-toolbar-row>\\n\\n            <!-- SEARCH -->\\n            <div class=\\\"search-wrapper\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                <div class=\\\"search\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                    <mat-icon>search</mat-icon>\\n\\n                    <input [(ngModel)]=\\\"searchText\\\" type=\\\"text\\\" placeholder=\\\"Search or start new chat\\\" fxFlex>\\n\\n                </div>\\n            </div>\\n            <!-- / SEARCH -->\\n\\n        </mat-toolbar-row>\\n        <!-- / TOOLBAR BOTTOM -->\\n\\n    </mat-toolbar>\\n    <!-- / CHATS TOOLBAR -->\\n\\n</div>\\n<!-- / SIDENAV HEADER -->\\n\\n<!-- SIDENAV CONTENT -->\\n<div class=\\\"sidenav-content\\\" fusePerfectScrollbar fxFlex>\\n\\n    <!-- CHATS CONTENT -->\\n    <div *fuseIfOnDom [@animateStagger]=\\\"{value:'50'}\\\">\\n\\n        <!-- CHATS LIST-->\\n        <div class=\\\"chat-list\\\" fxLayout=\\\"column\\\">\\n\\n            <div matSubheader *ngIf=\\\"(user.chatList | filter: searchText).length > 0\\\">\\n                Chats\\n            </div>\\n\\n            <button mat-button class=\\\"contact\\\"\\n                    *ngFor=\\\"let chat of user.chatList | filter: searchText\\\"\\n                    (click)=\\\"getChat(chat.contactId)\\\" ngClass=\\\"{'unread':contact.unread}\\\"\\n                    [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                    <div class=\\\"avatar-wrapper\\\" fxFlex=\\\"0 1 auto\\\" fxLayoutAlign=\\\"center center\\\">\\n                        <img [src]=\\\"contacts | getById:chat.contactId:'avatar'\\\"\\n                             class=\\\"avatar\\\"\\n                             alt=\\\"{{contacts | getById:chat.contactId:'name'}}\\\"/>\\n                        <mat-icon class=\\\"s-16 status\\\" [ngClass]=\\\"contacts | getById:chat.contactId:'status'\\\"></mat-icon>\\n                    </div>\\n\\n                    <div fxLayout=\\\"row\\\" fxFlex>\\n\\n                        <div class=\\\"\\\" fxFlex fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\n                            <div class=\\\"contact-name\\\">{{contacts | getById:chat.contactId:'name'}}</div>\\n                            <div class=\\\"contact-last-message\\\">{{chat.lastMessage}}</div>\\n                        </div>\\n\\n                        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center end\\\">\\n                            <div class=\\\"contact-last-message-time\\\">\\n                                {{chat.lastMessageTime | date}}\\n                            </div>\\n                            <div *ngIf=\\\"chat.unread\\\" class=\\\"unread-message-count accent\\\">{{chat.unread}}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </button>\\n\\n        </div>\\n        <!-- / CHATS LIST-->\\n\\n        <!-- CONTACTS LIST-->\\n        <div class=\\\"contact-list\\\" fxLayout=\\\"column\\\">\\n\\n            <div matSubheader *ngIf=\\\"(contacts | filter: searchText).length > 0\\\">\\n                Contacts\\n            </div>\\n\\n            <button mat-button class=\\\"contact\\\"\\n                    *ngFor=\\\"let contact of contacts| filter: searchText\\\"\\n                    (click)=\\\"getChat(contact.id)\\\"\\n                    [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                    <div class=\\\"avatar-wrapper\\\" fxFlex=\\\"0 1 auto\\\">\\n                        <img src=\\\"{{contact.avatar}}\\\" class=\\\"mat-avatar avatar\\\" alt=\\\"{{contact.name}}\\\"/>\\n                        <mat-icon class=\\\"s-16 status\\\" [ngClass]=\\\"contact.status\\\"></mat-icon>\\n                    </div>\\n\\n                    <div class=\\\"\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\n                        <div class=\\\"contact-name\\\">{{contact.name}}</div>\\n                        <p class=\\\"contact-mood\\\">{{contact.mood}}</p>\\n                    </div>\\n                </div>\\n            </button>\\n        </div>\\n        <!-- / CONTACTS LIST-->\\n\\n        <!-- NO RESULTS MESSAGE -->\\n        <div *ngIf=\\\"(contacts | filter: searchText).length === 0\\\" class=\\\"no-results-message\\\">\\n            No results..\\n        </div>\\n        <!-- NO RESULTS MESSAGE-->\\n\\n    </div>\\n    <!-- / CHATS CONTENT -->\\n\\n</div>\\n<!-- / SIDENAV CONTENT -->\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nchat-chats-sidenav {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column; }\\nchat-chats-sidenav .sidenav-header mat-toolbar {\\n    border-bottom: 1px solid; }\\nchat-chats-sidenav .sidenav-header mat-toolbar .avatar-wrapper .avatar,\\n    chat-chats-sidenav .sidenav-header mat-toolbar .avatar-wrapper .status {\\n      cursor: pointer; }\\nchat-chats-sidenav .sidenav-header mat-toolbar .search {\\n      height: 36px;\\n      line-height: 36px;\\n      padding: 8px;\\n      font-size: 13px;\\n      box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\nchat-chats-sidenav .sidenav-header mat-toolbar .search .icon {\\n        margin: 0; }\\nchat-chats-sidenav .sidenav-header mat-toolbar .search input {\\n        padding-left: 12px;\\n        height: 36px;\\n        border: none; }\\nchat-chats-sidenav .sidenav-content {\\n    overflow: auto;\\n    -webkit-overflow-scrolling: touch; }\\nchat-chats-sidenav .sidenav-content .contact-list .mat-subheader,\\n    chat-chats-sidenav .sidenav-content .chat-list .mat-subheader {\\n      padding-left: 16px;\\n      font-size: 20px;\\n      font-weight: 300;\\n      height: 88px;\\n      line-height: 88px; }\\nchat-chats-sidenav .sidenav-content .contact-list .contact,\\n    chat-chats-sidenav .sidenav-content .chat-list .contact {\\n      white-space: normal;\\n      text-align: left;\\n      letter-spacing: .010em;\\n      min-height: 88px;\\n      border-bottom: 1px solid;\\n      padding: 16px;\\n      font-weight: 400; }\\nchat-chats-sidenav .sidenav-content .contact-list .contact .avatar-wrapper .avatar,\\n      chat-chats-sidenav .sidenav-content .chat-list .contact .avatar-wrapper .avatar {\\n        margin-right: 16px; }\\nchat-chats-sidenav .sidenav-content .contact-list .contact .contact-name,\\n      chat-chats-sidenav .sidenav-content .chat-list .contact .contact-name {\\n        font-size: 16px;\\n        white-space: nowrap;\\n        text-overflow: ellipsis; }\\nchat-chats-sidenav .sidenav-content .contact-list .contact .contact-last-message,\\n      chat-chats-sidenav .sidenav-content .chat-list .contact .contact-last-message {\\n        line-height: normal;\\n        margin-top: 0; }\\nchat-chats-sidenav .sidenav-content .contact-list .contact .contact-mood,\\n      chat-chats-sidenav .sidenav-content .chat-list .contact .contact-mood {\\n        line-height: normal;\\n        margin-top: 0; }\\nchat-chats-sidenav .sidenav-content .contact-list .contact .unread-message-count,\\n      chat-chats-sidenav .sidenav-content .chat-list .contact .unread-message-count {\\n        border-radius: 50%;\\n        text-align: center;\\n        width: 24px;\\n        height: 24px;\\n        line-height: 24px; }\\nchat-chats-sidenav .sidenav-content .no-results-message {\\n      position: absolute;\\n      width: 100%;\\n      height: 88px;\\n      padding: 16px;\\n      font-size: 15px;\\n      font-weight: 400; }\\n\"","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ObservableMedia } from '@angular/flex-layout';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseMatSidenavHelperService } from '@fuse/directives/fuse-mat-sidenav/fuse-mat-sidenav.service';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-chats-sidenav',\n    templateUrl  : './chats.component.html',\n    styleUrls    : ['./chats.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatChatsSidenavComponent implements OnInit, OnDestroy\n{\n    chats: any[];\n    chatSearch: any;\n    contacts: any[];\n    searchText: string;\n    user: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     * @param {FuseMatSidenavHelperService} _fuseMatSidenavHelperService\n     * @param {ObservableMedia} _observableMedia\n     */\n    constructor(\n        private _chatService: ChatService,\n        private _fuseMatSidenavHelperService: FuseMatSidenavHelperService,\n        public _observableMedia: ObservableMedia\n    )\n    {\n        // Set the defaults\n        this.chatSearch = {\n            name: ''\n        };\n        this.searchText = '';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.user = this._chatService.user;\n        this.chats = this._chatService.chats;\n        this.contacts = this._chatService.contacts;\n\n        this._chatService.onChatsUpdated\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(updatedChats => {\n                this.chats = updatedChats;\n            });\n\n        this._chatService.onUserUpdated\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(updatedUser => {\n                this.user = updatedUser;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get chat\n     *\n     * @param contact\n     */\n    getChat(contact): void\n    {\n        this._chatService.getChat(contact);\n\n        if ( !this._observableMedia.isActive('gt-md') )\n        {\n            this._fuseMatSidenavHelperService.getSidenav('chat-left-sidenav').toggle();\n        }\n    }\n\n    /**\n     * Set user status\n     *\n     * @param status\n     */\n    setUserStatus(status): void\n    {\n        this._chatService.setUserStatus(status);\n    }\n\n    /**\n     * Change left sidenav view\n     *\n     * @param view\n     */\n    changeLeftSidenavView(view): void\n    {\n        this._chatService.onLeftSidenavViewChanged.next(view);\n    }\n\n    /**\n     * Logout\n     */\n    logout(): void\n    {\n        console.log('logout triggered');\n    }\n}\n","module.exports = \"<div [ngSwitch]=\\\"view\\\" class=\\\"views\\\">\\n    <chat-chats-sidenav class=\\\"view\\\"\\n                        *ngSwitchCase=\\\"'chats'\\\"\\n                        [@slideInRight]>\\n    </chat-chats-sidenav>\\n\\n    <chat-user-sidenav class=\\\"view\\\"\\n                       *ngSwitchCase=\\\"'user'\\\"\\n                       [@slideInLeft]\\n                       fusePerfectScrollbar>\\n    </chat-user-sidenav>\\n</div>\\n\"","module.exports = \"chat-left-sidenav {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%; }\\n  chat-left-sidenav .views {\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%; }\\n  chat-left-sidenav .views .view {\\n      position: absolute;\\n      height: 100%;\\n      bottom: 0;\\n      left: 0;\\n      right: 0;\\n      top: 0; }\\n\"","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-left-sidenav',\n    templateUrl  : './left.component.html',\n    styleUrls    : ['./left.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatLeftSidenavComponent implements OnInit, OnDestroy\n{\n    view: string;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the defaults\n        this.view = 'chats';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onLeftSidenavViewChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(view => {\n                this.view = view;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n}\n","module.exports = \"<!-- SIDENAV HEADER -->\\n<div class=\\\"sidenav-header\\\">\\n\\n    <!-- USER TOOLBAR -->\\n    <mat-toolbar class=\\\"accent\\\">\\n\\n        <!-- TOOLBAR TOP -->\\n        <mat-toolbar-row fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n            <button mat-icon-button (click)=\\\"changeLeftSidenavView('chats')\\\" aria-label=\\\"back\\\">\\n                <mat-icon>arrow_back</mat-icon>\\n            </button>\\n\\n        </mat-toolbar-row>\\n        <!-- / TOOLBAR TOP -->\\n\\n        <!-- TOOLBAR BOTTOM -->\\n        <mat-toolbar-row class=\\\"toolbar-bottom\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n            <img [src]=\\\"user.avatar\\\" class=\\\"avatar user-avatar huge\\\" alt=\\\"{{user.name}}\\\"/>\\n            <div class=\\\"user-name my-8\\\">{{user.name}}</div>\\n\\n        </mat-toolbar-row>\\n        <!-- / TOOLBAR BOTTOM -->\\n\\n    </mat-toolbar>\\n    <!-- / USER TOOLBAR -->\\n</div>\\n\\n<!-- SIDENAV CONTENT -->\\n<div class=\\\"sidenav-content py-32 px-24\\\" fxFlex>\\n\\n    <!-- USER MOOD -->\\n    <form [formGroup]=\\\"userForm\\\" fxLayout=\\\"column\\\">\\n\\n        <mat-form-field class=\\\"mb-24\\\" fxFlex=\\\"0 1 auto\\\">\\n            <textarea matInput placeholder=\\\"Mood\\\" name=\\\"mood\\\"\\n                      formControlName=\\\"mood\\\" rows=\\\"3\\\"></textarea>\\n        </mat-form-field>\\n\\n        <mat-radio-group formControlName=\\\"status\\\" fxLayout=\\\"column\\\">\\n\\n            <mat-radio-button value=\\\"online\\\" class=\\\"py-8\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                    <mat-icon class=\\\"status online mr-8\\\"></mat-icon>\\n                    <span class=\\\"mat-h4 m-0\\\">Online</span>\\n                </div>\\n            </mat-radio-button>\\n\\n            <mat-radio-button value=\\\"away\\\" class=\\\"py-8\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                    <mat-icon class=\\\"status away mr-8\\\"></mat-icon>\\n                    <span class=\\\"mat-h4 m-0\\\">Away</span>\\n                </div>\\n            </mat-radio-button>\\n\\n            <mat-radio-button value=\\\"do-not-disturb\\\" class=\\\"py-8\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                    <mat-icon class=\\\"status do-not-disturb mr-8\\\"></mat-icon>\\n                    <span class=\\\"mat-h4 m-0\\\">Do not disturb</span>\\n                </div>\\n            </mat-radio-button>\\n\\n            <mat-radio-button value=\\\"offline\\\" class=\\\"py-8\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                    <mat-icon class=\\\"status offline mr-8\\\"></mat-icon>\\n                    <span class=\\\"mat-h4 m-0\\\">Offline</span>\\n                </div>\\n            </mat-radio-button>\\n        </mat-radio-group>\\n\\n    </form>\\n    <!-- / USER MOOD -->\\n\\n</div>\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nchat-user-sidenav {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  overflow: auto;\\n  -webkit-overflow-scrolling: touch; }\\nchat-user-sidenav mat-toolbar .toolbar-bottom {\\n    height: 180px; }\\n\"","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-user-sidenav',\n    templateUrl  : './user.component.html',\n    styleUrls    : ['./user.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChatUserSidenavComponent implements OnInit, OnDestroy\n{\n    user: any;\n    userForm: FormGroup;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this.user = this._chatService.user;\n\n        this.userForm = new FormGroup({\n            mood  : new FormControl(this.user.mood),\n            status: new FormControl(this.user.status)\n        });\n\n        this.userForm.valueChanges\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(500),\n                distinctUntilChanged()\n            )\n            .subscribe(data => {\n                this.user.mood = data.mood;\n                this.user.status = data.status;\n                this._chatService.updateUserData(this.user);\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Change left sidenav view\n     *\n     * @param view\n     */\n    changeLeftSidenavView(view): void\n    {\n        this._chatService.onLeftSidenavViewChanged.next(view);\n    }\n\n}\n","module.exports = \"<!-- SIDENAV HEADER -->\\n<div class=\\\"sidenav-header\\\" *ngIf=\\\"contact\\\">\\n\\n    <!-- CONTACT TOOLBAR -->\\n    <mat-toolbar class=\\\"accent\\\">\\n\\n        <!-- TOOLBAR TOP -->\\n        <mat-toolbar-row fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n            <div>Contact Info</div>\\n\\n            <button mat-icon-button fuseMatSidenavToggler=\\\"chat-right-sidenav\\\" aria-label=\\\"close\\\">\\n                <mat-icon>close</mat-icon>\\n            </button>\\n\\n        </mat-toolbar-row>\\n        <!-- / TOOLBAR TOP -->\\n\\n        <!-- TOOLBAR BOTTOM -->\\n        <mat-toolbar-row class=\\\"toolbar-bottom\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n            <img [src]=\\\"contact.avatar\\\" class=\\\"avatar contact-avatar huge\\\" alt=\\\"{{contact.name}}\\\"/>\\n            <div class=\\\"contact-name my-8\\\">{{contact.name}}</div>\\n        </mat-toolbar-row>\\n        <!-- / TOOLBAR BOTTOM -->\\n\\n    </mat-toolbar>\\n    <!-- / CONTACT TOOLBAR -->\\n</div>\\n\\n<!-- SIDENAV CONTENT -->\\n<div class=\\\"sidenav-content py-32 px-24\\\" fxFlex fxLayout=\\\"column\\\" *ngIf=\\\"contact\\\">\\n\\n    <!-- CONTACT MOOD -->\\n    <div class=\\\"secondary-text mb-8\\\">Mood</div>\\n    <div>{{contact.mood}}</div>\\n    <!-- / CONTACT MOOD -->\\n\\n</div>\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nchat-contact-sidenav {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  overflow: auto;\\n  -webkit-overflow-scrolling: touch; }\\nchat-contact-sidenav mat-toolbar .toolbar-bottom {\\n    height: 180px; }\\n\"","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-contact-sidenav',\n    templateUrl  : './contact.component.html',\n    styleUrls    : ['./contact.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChatContactSidenavComponent implements OnInit, OnDestroy\n{\n    contact: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ChatService} _chatService\n     */\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onContactSelected\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(contact => {\n                this.contact = contact;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n}\n","module.exports = \"<div [ngSwitch]=\\\"view\\\" class=\\\"views\\\">\\n\\n    <chat-contact-sidenav class=\\\"view\\\"\\n                          *ngSwitchCase=\\\"'contact'\\\"\\n                          [@slideInRight]\\n                          fusePerfectScrollbar>\\n    </chat-contact-sidenav>\\n\\n</div>\\n\"","module.exports = \"chat-right-sidenav {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%; }\\n  chat-right-sidenav .views {\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%; }\\n  chat-right-sidenav .views .view {\\n      position: absolute;\\n      height: 100%;\\n      bottom: 0;\\n      left: 0;\\n      right: 0;\\n      top: 0; }\\n\"","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n    selector     : 'chat-right-sidenav',\n    templateUrl  : './right.component.html',\n    styleUrls    : ['./right.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class ChatRightSidenavComponent implements OnInit, OnDestroy\n{\n    view: string;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    constructor(\n        private _chatService: ChatService\n    )\n    {\n        // Set the defaults\n        this.view = 'contact';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._chatService.onRightSidenavViewChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(view => {\n                this.view = view;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n}\n"],"sourceRoot":""}